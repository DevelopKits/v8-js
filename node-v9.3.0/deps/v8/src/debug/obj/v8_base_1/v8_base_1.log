  Protocol.cpp
  Debugger.cpp
  Profiler.cpp
  Schema.cpp
D:\v8-js\node-v9.3.0\deps\v8\src/inspector/string-16.h(70): warning C4244: “初始化”: 从“const v8_inspector::UChar”转换到“char”，可能丢失数据 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Protocol.cpp)
D:\v8-js\node-v9.3.0\deps\v8\src/inspector/string-16.h(70): warning C4244: “初始化”: 从“const v8_inspector::UChar”转换到“char”，可能丢失数据 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Schema.cpp)
D:\v8-js\node-v9.3.0\deps\v8\src/inspector/string-16.h(70): warning C4244: “初始化”: 从“const v8_inspector::UChar”转换到“char”，可能丢失数据 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Debugger.cpp)
D:\v8-js\node-v9.3.0\deps\v8\src/inspector/string-16.h(70): warning C4244: “初始化”: 从“const v8_inspector::UChar”转换到“char”，可能丢失数据 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Profiler.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Protocol.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Schema.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Protocol.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Debugger.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Schema.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Debugger.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Profiler.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Debugger.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Protocol.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Profiler.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Debugger.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Schema.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Protocol.cpp)d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Schema.cpp)
  
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Debugger.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Debugger.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Schema.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Protocol.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Schema.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Protocol.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Profiler.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Profiler.cpp)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Profiler.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Profiler.cpp)
D:\v8-js\node-v9.3.0\deps\v8\include/v8-inspector.h(80): warning C4251: “v8_inspector::V8ContextInfo::context”: class“v8::Local<v8::Context>”需要有 dll 接口由 class“v8_inspector::V8ContextInfo”的客户端使用  (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Protocol.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(1147): note: 参见“v8::Local<v8::Context>”的声明 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Protocol.cpp)
D:\v8-js\node-v9.3.0\deps\v8\include/v8-inspector.h(80): warning C4251: “v8_inspector::V8ContextInfo::context”: class“v8::Local<v8::Context>”需要有 dll 接口由 class“v8_inspector::V8ContextInfo”的客户端使用  (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Debugger.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(1147): note: 参见“v8::Local<v8::Context>”的声明 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Debugger.cpp)
D:\v8-js\node-v9.3.0\deps\v8\include/v8-inspector.h(80): warning C4251: “v8_inspector::V8ContextInfo::context”: class“v8::Local<v8::Context>”需要有 dll 接口由 class“v8_inspector::V8ContextInfo”的客户端使用  (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Schema.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(1147): note: 参见“v8::Local<v8::Context>”的声明 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Schema.cpp)
D:\v8-js\node-v9.3.0\deps\v8\include/v8-inspector.h(80): warning C4251: “v8_inspector::V8ContextInfo::context”: class“v8::Local<v8::Context>”需要有 dll 接口由 class“v8_inspector::V8ContextInfo”的客户端使用  (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Profiler.cpp)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(1147): note: 参见“v8::Local<v8::Context>”的声明 (编译源文件 D:\v8-js\node-v9.3.0\deps\v8\src\Debug\obj\global_intermediate\src\inspector\protocol\Profiler.cpp)
  injected-script.cc
  remote-object-id.cc
  asm-scanner.cc
  builtins-array.cc
D:\v8-js\node-v9.3.0\deps\v8\src/inspector/string-16.h(70): warning C4244: “初始化”: 从“const v8_inspector::UChar”转换到“char”，可能丢失数据 (编译源文件 inspector\injected-script.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/asmjs/asm-scanner.h(147): warning C4251: “v8::internal::AsmJsScanner::identifier_string_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“v8::internal::AsmJsScanner”的客户端使用  (编译源文件 asmjs\asm-scanner.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\xstring(4054): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明 (编译源文件 asmjs\asm-scanner.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/inspector/string-16.h(70): warning C4244: “初始化”: 从“const v8_inspector::UChar”转换到“char”，可能丢失数据 (编译源文件 inspector\remote-object-id.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/asmjs/asm-scanner.h(149): warning C4251: “v8::internal::AsmJsScanner::local_names_”: class“std::unordered_map<std::string,v8::internal::AsmJsScanner::token_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::AsmJsScanner”的客户端使用
          with
          [
              _Kty=std::string,
              _Ty=v8::internal::AsmJsScanner::token_t
          ] (编译源文件 asmjs\asm-scanner.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/asmjs/asm-scanner.h(149): note: 参见“std::unordered_map<std::string,v8::internal::AsmJsScanner::token_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=std::string,
              _Ty=v8::internal::AsmJsScanner::token_t
          ] (编译源文件 asmjs\asm-scanner.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/asmjs/asm-scanner.h(150): warning C4251: “v8::internal::AsmJsScanner::global_names_”: class“std::unordered_map<std::string,v8::internal::AsmJsScanner::token_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::AsmJsScanner”的客户端使用
          with
          [
              _Kty=std::string,
              _Ty=v8::internal::AsmJsScanner::token_t
          ] (编译源文件 asmjs\asm-scanner.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/asmjs/asm-scanner.h(149): note: 参见“std::unordered_map<std::string,v8::internal::AsmJsScanner::token_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=std::string,
              _Ty=v8::internal::AsmJsScanner::token_t
          ] (编译源文件 asmjs\asm-scanner.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/asmjs/asm-scanner.h(151): warning C4251: “v8::internal::AsmJsScanner::property_names_”: class“std::unordered_map<std::string,v8::internal::AsmJsScanner::token_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::AsmJsScanner”的客户端使用
          with
          [
              _Kty=std::string,
              _Ty=v8::internal::AsmJsScanner::token_t
          ] (编译源文件 asmjs\asm-scanner.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/asmjs/asm-scanner.h(149): note: 参见“std::unordered_map<std::string,v8::internal::AsmJsScanner::token_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=std::string,
              _Ty=v8::internal::AsmJsScanner::token_t
          ] (编译源文件 asmjs\asm-scanner.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 inspector\injected-script.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 inspector\injected-script.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 inspector\injected-script.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 inspector\injected-script.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 inspector\injected-script.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 inspector\injected-script.cc)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 inspector\remote-object-id.cc)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 inspector\remote-object-id.cc)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 inspector\remote-object-id.cc)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 inspector\remote-object-id.cc)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 inspector\remote-object-id.cc)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 inspector\remote-object-id.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 asmjs\asm-scanner.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 asmjs\asm-scanner.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 asmjs\asm-scanner.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 asmjs\asm-scanner.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 asmjs\asm-scanner.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 asmjs\asm-scanner.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8-inspector.h(80): warning C4251: “v8_inspector::V8ContextInfo::context”: class“v8::Local<v8::Context>”需要有 dll 接口由 class“v8_inspector::V8ContextInfo”的客户端使用  (编译源文件 inspector\injected-script.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(1147): note: 参见“v8::Local<v8::Context>”的声明 (编译源文件 inspector\injected-script.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8-inspector.h(80): warning C4251: “v8_inspector::V8ContextInfo::context”: class“v8::Local<v8::Context>”需要有 dll 接口由 class“v8_inspector::V8ContextInfo”的客户端使用  (编译源文件 inspector\remote-object-id.cc)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(1147): note: 参见“v8::Local<v8::Context>”的声明 (编译源文件 inspector\remote-object-id.cc)
  builtins-collections.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 asmjs\asm-scanner.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 asmjs\asm-scanner.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 asmjs\asm-scanner.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 asmjs\asm-scanner.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 builtins\builtins-array.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 builtins\builtins-array.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-array.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 builtins\builtins-array.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-array.cc)
  builtins-date.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 builtins\builtins-array.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 builtins\builtins-collections.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 builtins\builtins-collections.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 builtins\builtins-array.cc)
  builtins-function.cc
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 builtins\builtins-date.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 builtins\builtins-date.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-date.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 builtins\builtins-date.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-collections.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-collections.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 builtins\builtins-function.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 builtins\builtins-function.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-function.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 builtins\builtins-function.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(999): warning C4251: “v8::internal::compiler::CodeAssemblerState::raw_assembler_”: class“std::unique_ptr<v8::internal::compiler::RawMachineAssembler,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用
          with
          [
              _Ty=v8::internal::compiler::RawMachineAssembler
          ] (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(999): note: 参见“std::unique_ptr<v8::internal::compiler::RawMachineAssembler,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::compiler::RawMachineAssembler
          ] (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1003): warning C4251: “v8::internal::compiler::CodeAssemblerState::variables_”: class“v8::internal::ZoneSet<v8::internal::compiler::CodeAssemblerVariable::Impl *,std::less<_Kty>>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用
          with
          [
              _Kty=v8::internal::compiler::CodeAssemblerVariable::Impl *
          ] (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1003): note: 参见“v8::internal::ZoneSet<v8::internal::compiler::CodeAssemblerVariable::Impl *,std::less<_Kty>>”的声明
          with
          [
              _Kty=v8::internal::compiler::CodeAssemblerVariable::Impl *
          ] (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1004): warning C4251: “v8::internal::compiler::CodeAssemblerState::call_prologue_”: class“std::function<void (void)>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(171): note: 参见“std::function<void (void)>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1005): warning C4251: “v8::internal::compiler::CodeAssemblerState::call_epilogue_”: class“std::function<void (void)>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用  (编译源文件 builtins\builtins-array.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(171): note: 参见“std::function<void (void)>”的声明 (编译源文件 builtins\builtins-array.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(999): warning C4251: “v8::internal::compiler::CodeAssemblerState::raw_assembler_”: class“std::unique_ptr<v8::internal::compiler::RawMachineAssembler,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用
          with
          [
              _Ty=v8::internal::compiler::RawMachineAssembler
          ] (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(999): note: 参见“std::unique_ptr<v8::internal::compiler::RawMachineAssembler,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::compiler::RawMachineAssembler
          ] (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1003): warning C4251: “v8::internal::compiler::CodeAssemblerState::variables_”: class“v8::internal::ZoneSet<v8::internal::compiler::CodeAssemblerVariable::Impl *,std::less<_Kty>>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用
          with
          [
              _Kty=v8::internal::compiler::CodeAssemblerVariable::Impl *
          ] (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1003): note: 参见“v8::internal::ZoneSet<v8::internal::compiler::CodeAssemblerVariable::Impl *,std::less<_Kty>>”的声明
          with
          [
              _Kty=v8::internal::compiler::CodeAssemblerVariable::Impl *
          ] (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1004): warning C4251: “v8::internal::compiler::CodeAssemblerState::call_prologue_”: class“std::function<void (void)>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(171): note: 参见“std::function<void (void)>”的声明 (编译源文件 builtins\builtins-date.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1005): warning C4251: “v8::internal::compiler::CodeAssemblerState::call_epilogue_”: class“std::function<void (void)>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用  (编译源文件 builtins\builtins-date.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(171): note: 参见“std::function<void (void)>”的声明 (编译源文件 builtins\builtins-date.cc)
builtins\builtins-date.cc(137): warning C4244: “=”: 从“int64_t”转换到“double”，可能丢失数据
builtins\builtins-date.cc(187): warning C4244: “=”: 从“int64_t”转换到“double”，可能丢失数据
builtins\builtins-date.cc(279): warning C4244: “=”: 从“int64_t”转换到“double”，可能丢失数据
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(219): warning C4251: “v8::internal::CompilationJob::isolate_thread_id_”: class“v8::internal::ThreadId”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/isolate.h(236): note: 参见“v8::internal::ThreadId”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(220): warning C4251: “v8::internal::CompilationJob::time_taken_to_prepare_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(221): warning C4251: “v8::internal::CompilationJob::time_taken_to_execute_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 builtins\builtins-function.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(222): warning C4251: “v8::internal::CompilationJob::time_taken_to_finalize_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 builtins\builtins-function.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 builtins\builtins-function.cc)
  builtins-json.cc
  builtins-promise.cc
  builtins-string.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 builtins\builtins-json.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 builtins\builtins-json.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-json.cc)
  builtins-typedarray.cc
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 builtins\builtins-json.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 builtins\builtins-promise.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-promise.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 builtins\builtins-promise.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 builtins\builtins-string.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 builtins\builtins-string.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-string.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 builtins\builtins-string.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-json.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-json.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 builtins\builtins-typedarray.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 builtins\builtins-typedarray.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 builtins\builtins-typedarray.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-string.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-string.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 builtins\builtins-typedarray.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 builtins\builtins-typedarray.cc)
builtins\builtins-typedarray.cc(115): warning C4244: “参数”: 从“int64_t”转换到“::size_t”，可能丢失数据
  cached-powers.cc
  code-stub-assembler.cc
  compilation-cache.cc
  compilation-info.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compilation-cache.cc)
  access-builder.cc
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compilation-info.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compilation-cache.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compilation-cache.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compilation-cache.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<v8::internal::byte>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): note: 参见“v8::internal::ZoneVector<v8::internal::byte>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(46): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(302): warning C4251: “v8::internal::CompilationInfo::script_”: class“v8::internal::Handle<v8::internal::Script>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(31): note: 参见“v8::internal::Handle<v8::internal::Script>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(310): warning C4251: “v8::internal::CompilationInfo::shared_info_”: class“v8::internal::Handle<v8::internal::SharedFunctionInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(33): note: 参见“v8::internal::Handle<v8::internal::SharedFunctionInfo>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(312): warning C4251: “v8::internal::CompilationInfo::closure_”: class“v8::internal::Handle<v8::internal::JSFunction>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(89): note: 参见“v8::internal::Handle<v8::internal::JSFunction>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(315): warning C4251: “v8::internal::CompilationInfo::code_”: class“v8::internal::Handle<v8::internal::Code>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/list.h(211): note: 参见“v8::internal::Handle<v8::internal::Code>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(319): warning C4251: “v8::internal::CompilationInfo::osr_offset_”: class“v8::internal::BailoutId”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(899): note: 参见“v8::internal::BailoutId”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(324): warning C4251: “v8::internal::CompilationInfo::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(103): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(327): warning C4251: “v8::internal::CompilationInfo::asm_wasm_data_”: class“v8::internal::Handle<v8::internal::FixedArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(753): note: 参见“v8::internal::Handle<v8::internal::FixedArray>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(333): warning C4251: “v8::internal::CompilationInfo::deferred_handles_”: class“std::shared_ptr<v8::internal::DeferredHandles>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(189): note: 参见“std::shared_ptr<v8::internal::DeferredHandles>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(336): warning C4251: “v8::internal::CompilationInfo::dependencies_”: class“v8::internal::CompilationDependencies”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-dependencies.h(17): note: 参见“v8::internal::CompilationDependencies”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(342): warning C4251: “v8::internal::CompilationInfo::inlined_functions_”: class“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(258): note: 参见“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(354): warning C4251: “v8::internal::CompilationInfo::debug_name_”: class“v8::internal::Vector<const char>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(195): note: 参见“v8::internal::Vector<const char>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(358): warning C4251: “v8::internal::CompilationInfo::coverage_info_”: class“v8::internal::Handle<v8::internal::CoverageInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(276): note: 参见“v8::internal::Handle<v8::internal::CoverageInfo>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compilation-info.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compilation-info.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compilation-info.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compilation-info.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 code-stub-assembler.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 code-stub-assembler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 code-stub-assembler.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 code-stub-assembler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(234): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/type-cache.h(106): warning C4244: “参数”: 从“const int64_t”转换到“double”，可能丢失数据 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\access-builder.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\access-builder.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\access-builder.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\access-builder.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(528): warning C4251: “v8::internal::Scope::variables_”: class“v8::internal::VariableMap”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(31): note: 参见“v8::internal::VariableMap”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(531): warning C4251: “v8::internal::Scope::locals_”: class“v8::internal::ThreadedList<v8::internal::Variable>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/variables.h(181): note: 参见“v8::internal::ThreadedList<v8::internal::Variable>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(536): warning C4251: “v8::internal::Scope::decls_”: class“v8::internal::ThreadedList<v8::internal::Declaration>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/ast.h(434): note: 参见“v8::internal::ThreadedList<v8::internal::Declaration>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(539): warning C4251: “v8::internal::Scope::scope_info_”: class“v8::internal::Handle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects/scope-info.h(136): note: 参见“v8::internal::Handle<v8::internal::ScopeInfo>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): warning C4251: “v8::internal::DeclarationScope::params_”: class“v8::internal::ZoneList<v8::internal::Variable *>”需要有 dll 接口由 class“v8::internal::DeclarationScope”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): note: 参见“v8::internal::ZoneList<v8::internal::Variable *>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compilation-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\access-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\access-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(261): warning C4251: “v8::internal::ParseInfo::zone_”: class“std::shared_ptr<v8::internal::Zone>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(261): note: 参见“std::shared_ptr<v8::internal::Zone>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(278): warning C4251: “v8::internal::ParseInfo::script_”: class“v8::internal::Handle<v8::internal::Script>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(31): note: 参见“v8::internal::Handle<v8::internal::Script>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(279): warning C4251: “v8::internal::ParseInfo::maybe_outer_scope_info_”: class“v8::internal::MaybeHandle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects/scope-info.h(183): note: 参见“v8::internal::MaybeHandle<v8::internal::ScopeInfo>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(282): warning C4251: “v8::internal::ParseInfo::character_stream_”: class“std::unique_ptr<v8::internal::Utf16CharacterStream,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用
          with
          [
              _Ty=v8::internal::Utf16CharacterStream
          ] (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(98): note: 参见“std::unique_ptr<v8::internal::Utf16CharacterStream,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Utf16CharacterStream
          ] (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(284): warning C4251: “v8::internal::ParseInfo::consumed_preparsed_scope_data_”: class“v8::internal::ConsumedPreParsedScopeData”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/preparsed-scope-data.h(182): note: 参见“v8::internal::ConsumedPreParsedScopeData”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(285): warning C4251: “v8::internal::ParseInfo::ast_value_factory_”: class“std::shared_ptr<v8::internal::AstValueFactory>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(285): note: 参见“std::shared_ptr<v8::internal::AstValueFactory>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(293): warning C4251: “v8::internal::ParseInfo::deferred_handles_”: class“std::shared_ptr<v8::internal::DeferredHandles>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 compilation-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(189): note: 参见“std::shared_ptr<v8::internal::DeferredHandles>”的声明 (编译源文件 compilation-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(999): warning C4251: “v8::internal::compiler::CodeAssemblerState::raw_assembler_”: class“std::unique_ptr<v8::internal::compiler::RawMachineAssembler,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用
          with
          [
              _Ty=v8::internal::compiler::RawMachineAssembler
          ] (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(999): note: 参见“std::unique_ptr<v8::internal::compiler::RawMachineAssembler,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::compiler::RawMachineAssembler
          ] (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1003): warning C4251: “v8::internal::compiler::CodeAssemblerState::variables_”: class“v8::internal::ZoneSet<v8::internal::compiler::CodeAssemblerVariable::Impl *,std::less<_Kty>>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用
          with
          [
              _Kty=v8::internal::compiler::CodeAssemblerVariable::Impl *
          ] (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1003): note: 参见“v8::internal::ZoneSet<v8::internal::compiler::CodeAssemblerVariable::Impl *,std::less<_Kty>>”的声明
          with
          [
              _Kty=v8::internal::compiler::CodeAssemblerVariable::Impl *
          ] (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1004): warning C4251: “v8::internal::compiler::CodeAssemblerState::call_prologue_”: class“std::function<void (void)>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(171): note: 参见“std::function<void (void)>”的声明 (编译源文件 code-stub-assembler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(1005): warning C4251: “v8::internal::compiler::CodeAssemblerState::call_epilogue_”: class“std::function<void (void)>”需要有 dll 接口由 class“v8::internal::compiler::CodeAssemblerState”的客户端使用  (编译源文件 code-stub-assembler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/code-assembler.h(171): note: 参见“std::function<void (void)>”的声明 (编译源文件 code-stub-assembler.cc)
  all-nodes.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\all-nodes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\all-nodes.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\all-nodes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\all-nodes.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\all-nodes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\all-nodes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\all-nodes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\all-nodes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\all-nodes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\all-nodes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\all-nodes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\all-nodes.cc)
  branch-elimination.cc
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\all-nodes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\all-nodes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\all-nodes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(234): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\all-nodes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): warning C4251: “v8::internal::compiler::Graph::decorators_”: class“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”需要有 dll 接口由 class“v8::internal::compiler::Graph”的客户端使用  (编译源文件 compiler\all-nodes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”的声明 (编译源文件 compiler\all-nodes.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\branch-elimination.cc)
  bytecode-graph-builder.cc
  c-linkage.cc
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(234): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(178): warning C4251: “v8::internal::compiler::GraphReducer::state_”: class“v8::internal::compiler::NodeMarker<v8::internal::compiler::GraphReducer::State>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(178): note: 参见“v8::internal::compiler::NodeMarker<v8::internal::compiler::GraphReducer::State>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(179): warning C4251: “v8::internal::compiler::GraphReducer::reducers_”: class“v8::internal::ZoneVector<v8::internal::compiler::Reducer *>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(179): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::Reducer *>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(180): warning C4251: “v8::internal::compiler::GraphReducer::revisit_”: class“v8::internal::ZoneQueue<v8::internal::compiler::Node *>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(180): note: 参见“v8::internal::ZoneQueue<v8::internal::compiler::Node *>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(181): warning C4251: “v8::internal::compiler::GraphReducer::stack_”: class“v8::internal::ZoneStack<v8::internal::compiler::GraphReducer::NodeState>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(181): note: 参见“v8::internal::ZoneStack<v8::internal::compiler::GraphReducer::NodeState>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/branch-elimination.h(106): warning C4251: “v8::internal::compiler::BranchElimination::node_conditions_”: class“v8::internal::compiler::BranchElimination::PathConditionsForControlNodes”需要有 dll 接口由 class“v8::internal::compiler::BranchElimination”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/branch-elimination.h(74): note: 参见“v8::internal::compiler::BranchElimination::PathConditionsForControlNodes”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\branch-elimination.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\branch-elimination.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\branch-elimination.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-liveness-map.h(112): warning C4251: “v8::internal::compiler::BytecodeLivenessMap::liveness_map_”: class“v8::base::TemplateHashMapImpl<int,v8::internal::compiler::BytecodeLiveness,v8::base::KeyEqualityMatcher<int>,v8::internal::ZoneAllocationPolicy>”需要有 dll 接口由 class“v8::internal::compiler::BytecodeLivenessMap”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-liveness-map.h(110): note: 参见“v8::base::TemplateHashMapImpl<int,v8::internal::compiler::BytecodeLiveness,v8::base::KeyEqualityMatcher<int>,v8::internal::ZoneAllocationPolicy>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-analysis.h(109): warning C4251: “v8::internal::compiler::BytecodeAnalysis::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::compiler::BytecodeAnalysis”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-analysis.h(62): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-analysis.h(113): warning C4251: “v8::internal::compiler::BytecodeAnalysis::loop_stack_”: class“v8::internal::ZoneStack<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>”需要有 dll 接口由 class“v8::internal::compiler::BytecodeAnalysis”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-analysis.h(113): note: 参见“v8::internal::ZoneStack<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-analysis.h(114): warning C4251: “v8::internal::compiler::BytecodeAnalysis::loop_end_index_queue_”: class“v8::internal::ZoneVector<int>”需要有 dll 接口由 class“v8::internal::compiler::BytecodeAnalysis”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/zone-containers.h(183): note: 参见“v8::internal::ZoneVector<int>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-analysis.h(116): warning C4251: “v8::internal::compiler::BytecodeAnalysis::end_to_header_”: class“v8::internal::ZoneMap<int,int,std::less<int>>”需要有 dll 接口由 class“v8::internal::compiler::BytecodeAnalysis”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-analysis.h(116): note: 参见“v8::internal::ZoneMap<int,int,std::less<int>>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-analysis.h(117): warning C4251: “v8::internal::compiler::BytecodeAnalysis::header_to_info_”: class“v8::internal::ZoneMap<int,v8::internal::compiler::LoopInfo,std::less<int>>”需要有 dll 接口由 class“v8::internal::compiler::BytecodeAnalysis”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-analysis.h(117): note: 参见“v8::internal::ZoneMap<int,v8::internal::compiler::LoopInfo,std::less<int>>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-operator.h(155): warning C4244: “初始化”: 从“int64_t”转换到“intptr_t”，可能丢失数据 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): warning C4251: “v8::internal::compiler::Graph::decorators_”: class“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”需要有 dll 接口由 class“v8::internal::compiler::Graph”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(78): warning C4251: “v8::internal::compiler::VectorSlotPair::vector_”: class“v8::internal::Handle<v8::internal::FeedbackVector>”需要有 dll 接口由 class“v8::internal::compiler::VectorSlotPair”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(67): note: 参见“v8::internal::Handle<v8::internal::FeedbackVector>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(79): warning C4251: “v8::internal::compiler::VectorSlotPair::slot_”: class“v8::internal::FeedbackSlot”需要有 dll 接口由 class“v8::internal::compiler::VectorSlotPair”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(876): note: 参见“v8::internal::FeedbackSlot”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(676): warning C4251: “v8::internal::compiler::MachineOperatorBuilder::flags_”: class“v8::base::Flags<v8::internal::compiler::MachineOperatorBuilder::Flag,unsigned int>”需要有 dll 接口由 class“v8::internal::compiler::MachineOperatorBuilder”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(165): note: 参见“v8::base::Flags<v8::internal::compiler::MachineOperatorBuilder::Flag,unsigned int>”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(677): warning C4251: “v8::internal::compiler::MachineOperatorBuilder::alignment_requirements_”: class“v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements”需要有 dll 接口由 class“v8::internal::compiler::MachineOperatorBuilder”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(167): note: 参见“v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-graph.h(205): warning C4251: “v8::internal::compiler::JSGraph::cache_”: class“v8::internal::compiler::CommonNodeCache”需要有 dll 接口由 class“v8::internal::compiler::JSGraph”的客户端使用  (编译源文件 compiler\branch-elimination.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-node-cache.h(23): note: 参见“v8::internal::compiler::CommonNodeCache”的声明 (编译源文件 compiler\branch-elimination.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-operator.h(155): warning C4244: “初始化”: 从“int64_t”转换到“intptr_t”，可能丢失数据 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): warning C4251: “v8::internal::compiler::Graph::decorators_”: class“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”需要有 dll 接口由 class“v8::internal::compiler::Graph”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(78): warning C4251: “v8::internal::compiler::VectorSlotPair::vector_”: class“v8::internal::Handle<v8::internal::FeedbackVector>”需要有 dll 接口由 class“v8::internal::compiler::VectorSlotPair”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(67): note: 参见“v8::internal::Handle<v8::internal::FeedbackVector>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(79): warning C4251: “v8::internal::compiler::VectorSlotPair::slot_”: class“v8::internal::FeedbackSlot”需要有 dll 接口由 class“v8::internal::compiler::VectorSlotPair”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(876): note: 参见“v8::internal::FeedbackSlot”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(676): warning C4251: “v8::internal::compiler::MachineOperatorBuilder::flags_”: class“v8::base::Flags<v8::internal::compiler::MachineOperatorBuilder::Flag,unsigned int>”需要有 dll 接口由 class“v8::internal::compiler::MachineOperatorBuilder”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(165): note: 参见“v8::base::Flags<v8::internal::compiler::MachineOperatorBuilder::Flag,unsigned int>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(677): warning C4251: “v8::internal::compiler::MachineOperatorBuilder::alignment_requirements_”: class“v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements”需要有 dll 接口由 class“v8::internal::compiler::MachineOperatorBuilder”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(167): note: 参见“v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\c-linkage.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\c-linkage.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\c-linkage.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-node-cache.h(57): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-graph.h(205): warning C4251: “v8::internal::compiler::JSGraph::cache_”: class“v8::internal::compiler::CommonNodeCache”需要有 dll 接口由 class“v8::internal::compiler::JSGraph”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-node-cache.h(23): note: 参见“v8::internal::compiler::CommonNodeCache”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(178): warning C4251: “v8::internal::compiler::GraphReducer::state_”: class“v8::internal::compiler::NodeMarker<v8::internal::compiler::GraphReducer::State>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(178): note: 参见“v8::internal::compiler::NodeMarker<v8::internal::compiler::GraphReducer::State>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(179): warning C4251: “v8::internal::compiler::GraphReducer::reducers_”: class“v8::internal::ZoneVector<v8::internal::compiler::Reducer *>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(179): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::Reducer *>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(180): warning C4251: “v8::internal::compiler::GraphReducer::revisit_”: class“v8::internal::ZoneQueue<v8::internal::compiler::Node *>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(180): note: 参见“v8::internal::ZoneQueue<v8::internal::compiler::Node *>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(181): warning C4251: “v8::internal::compiler::GraphReducer::stack_”: class“v8::internal::ZoneStack<v8::internal::compiler::GraphReducer::NodeState>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(181): note: 参见“v8::internal::ZoneStack<v8::internal::compiler::GraphReducer::NodeState>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/state-values-utils.h(79): warning C4251: “v8::internal::compiler::StateValuesCache::hash_map_”: class“v8::base::CustomMatcherTemplateHashMapImpl<v8::internal::ZoneAllocationPolicy>”需要有 dll 接口由 class“v8::internal::compiler::StateValuesCache”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/zone.h(229): note: 参见“v8::base::CustomMatcherTemplateHashMapImpl<v8::internal::ZoneAllocationPolicy>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/state-values-utils.h(80): warning C4251: “v8::internal::compiler::StateValuesCache::working_space_”: class“v8::internal::ZoneVector<v8::internal::compiler::StateValuesCache::WorkingBuffer>”需要有 dll 接口由 class“v8::internal::compiler::StateValuesCache”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/state-values-utils.h(80): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::StateValuesCache::WorkingBuffer>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/state-values-utils.h(116): warning C4251: “v8::internal::compiler::StateValuesAccess::iterator::stack_”: class“v8::internal::compiler::SparseInputMask::InputIterator”需要有 dll 接口由 class“v8::internal::compiler::StateValuesAccess::iterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-operator.h(194): note: 参见“v8::internal::compiler::SparseInputMask::InputIterator”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(42): warning C4251: “v8::internal::interpreter::JumpTableTargetOffsets::iterator::current_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::interpreter::JumpTableTargetOffsets::iterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(117): warning C4251: “v8::internal::interpreter::BytecodeArrayAccessor::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeArrayAccessor”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/bytecode-analysis.h(62): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<v8::internal::byte>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): note: 参见“v8::internal::ZoneVector<v8::internal::byte>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(46): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(528): warning C4251: “v8::internal::Scope::variables_”: class“v8::internal::VariableMap”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(31): note: 参见“v8::internal::VariableMap”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(531): warning C4251: “v8::internal::Scope::locals_”: class“v8::internal::ThreadedList<v8::internal::Variable>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/variables.h(181): note: 参见“v8::internal::ThreadedList<v8::internal::Variable>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(536): warning C4251: “v8::internal::Scope::decls_”: class“v8::internal::ThreadedList<v8::internal::Declaration>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/ast.h(434): note: 参见“v8::internal::ThreadedList<v8::internal::Declaration>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(539): warning C4251: “v8::internal::Scope::scope_info_”: class“v8::internal::Handle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(295): note: 参见“v8::internal::Handle<v8::internal::ScopeInfo>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): warning C4251: “v8::internal::DeclarationScope::params_”: class“v8::internal::ZoneList<v8::internal::Variable *>”需要有 dll 接口由 class“v8::internal::DeclarationScope”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): note: 参见“v8::internal::ZoneList<v8::internal::Variable *>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/compiler-source-position-table.h(63): warning C4251: “v8::internal::compiler::SourcePositionTable::current_position_”: class“v8::internal::SourcePosition”需要有 dll 接口由 class“v8::internal::compiler::SourcePositionTable”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position.h(32): note: 参见“v8::internal::SourcePosition”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/compiler-source-position-table.h(64): warning C4251: “v8::internal::compiler::SourcePositionTable::table_”: class“v8::internal::compiler::NodeAuxData<v8::internal::SourcePosition,v8::internal::SourcePosition v8::internal::SourcePosition::Unknown(void)>”需要有 dll 接口由 class“v8::internal::compiler::SourcePositionTable”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/compiler-source-position-table.h(64): note: 参见“v8::internal::compiler::NodeAuxData<v8::internal::SourcePosition,v8::internal::SourcePosition v8::internal::SourcePosition::Unknown(void)>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
  code-generator.cc
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(316): warning C4251: “v8::internal::compiler::CallDescriptor::target_type_”: class“v8::internal::MachineType”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/machine-type.h(57): note: 参见“v8::internal::MachineType”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(317): warning C4251: “v8::internal::compiler::CallDescriptor::target_loc_”: class“v8::internal::compiler::LinkageLocation”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(33): note: 参见“v8::internal::compiler::LinkageLocation”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(320): warning C4251: “v8::internal::compiler::CallDescriptor::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(326): warning C4251: “v8::internal::compiler::CallDescriptor::flags_”: class“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\c-linkage.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(195): note: 参见“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”的声明 (编译源文件 compiler\c-linkage.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\code-generator.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\code-generator.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\code-generator.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\code-generator.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\code-generator.cc)
  common-node-cache.cc
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(316): warning C4251: “v8::internal::compiler::CallDescriptor::target_type_”: class“v8::internal::MachineType”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/machine-type.h(57): note: 参见“v8::internal::MachineType”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(317): warning C4251: “v8::internal::compiler::CallDescriptor::target_loc_”: class“v8::internal::compiler::LinkageLocation”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(33): note: 参见“v8::internal::compiler::LinkageLocation”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(320): warning C4251: “v8::internal::compiler::CallDescriptor::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(326): warning C4251: “v8::internal::compiler::CallDescriptor::flags_”: class“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\bytecode-graph-builder.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(195): note: 参见“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”的声明 (编译源文件 compiler\bytecode-graph-builder.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-operator.h(155): warning C4244: “初始化”: 从“int64_t”转换到“intptr_t”，可能丢失数据 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\common-node-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\common-node-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\common-node-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\common-node-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\common-node-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\common-node-cache.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\common-node-cache.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\common-node-cache.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\common-node-cache.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\common-node-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\code-generator.cc)
  common-operator.cc
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\common-node-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\common-node-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\common-node-cache.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-node-cache.h(57): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\common-node-cache.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(724): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<v8::internal::ZoneAllocator<T>,std::_Vector_val<std::_Simple_types<_Ty>>,false>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::internal::compiler::MoveOperands *,
              _Alloc=v8::internal::ZoneAllocator<v8::internal::compiler::MoveOperands *>
          ]
          and
          [
              T=v8::internal::compiler::MoveOperands *,
              _Ty=v8::internal::compiler::MoveOperands *
          ]
          and
          [
              _Ty=v8::internal::compiler::MoveOperands *,
              _Alloc=v8::internal::ZoneAllocator<v8::internal::compiler::MoveOperands *>
          ] (编译源文件 compiler\code-generator.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<v8::internal::ZoneAllocator<T>,std::_Vector_val<std::_Simple_types<_Ty>>,false>”的声明
          with
          [
              T=v8::internal::compiler::MoveOperands *,
              _Ty=v8::internal::compiler::MoveOperands *
          ] (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1357): warning C4251: “v8::internal::compiler::PhiInstruction::operands_”: class“v8::internal::ZoneVector<int>”需要有 dll 接口由 class“v8::internal::compiler::PhiInstruction”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/zone-containers.h(183): note: 参见“v8::internal::ZoneVector<int>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1428): warning C4251: “v8::internal::compiler::InstructionBlock::successors_”: class“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1400): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1429): warning C4251: “v8::internal::compiler::InstructionBlock::predecessors_”: class“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1400): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1430): warning C4251: “v8::internal::compiler::InstructionBlock::phis_”: class“v8::internal::ZoneVector<v8::internal::compiler::PhiInstruction *>”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1411): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::PhiInstruction *>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1431): warning C4251: “v8::internal::compiler::InstructionBlock::ao_number_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1432): warning C4251: “v8::internal::compiler::InstructionBlock::rpo_number_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1433): warning C4251: “v8::internal::compiler::InstructionBlock::loop_header_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1434): warning C4251: “v8::internal::compiler::InstructionBlock::loop_end_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1637): warning C4251: “v8::internal::compiler::InstructionSequence::source_positions_”: class“v8::internal::ZoneMap<const v8::internal::compiler::Instruction *,v8::internal::SourcePosition,std::less<K>>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用
          with
          [
              K=const v8::internal::compiler::Instruction *
          ] (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1629): note: 参见“v8::internal::ZoneMap<const v8::internal::compiler::Instruction *,v8::internal::SourcePosition,std::less<K>>”的声明
          with
          [
              K=const v8::internal::compiler::Instruction *
          ] (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1638): warning C4251: “v8::internal::compiler::InstructionSequence::constants_”: class“std::map<int,v8::internal::compiler::Constant,std::less<int>,v8::internal::ZoneAllocator<std::pair<const int,v8::internal::compiler::Constant>>>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1456): note: 参见“std::map<int,v8::internal::compiler::Constant,std::less<int>,v8::internal::ZoneAllocator<std::pair<const int,v8::internal::compiler::Constant>>>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1639): warning C4251: “v8::internal::compiler::InstructionSequence::immediates_”: class“v8::internal::ZoneVector<v8::internal::compiler::Constant>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1562): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::Constant>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1640): warning C4251: “v8::internal::compiler::InstructionSequence::instructions_”: class“v8::internal::ZoneDeque<v8::internal::compiler::Instruction *>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1460): note: 参见“v8::internal::ZoneDeque<v8::internal::compiler::Instruction *>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1642): warning C4251: “v8::internal::compiler::InstructionSequence::reference_maps_”: class“v8::internal::ZoneDeque<v8::internal::compiler::ReferenceMap *>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1461): note: 参见“v8::internal::ZoneDeque<v8::internal::compiler::ReferenceMap *>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1643): warning C4251: “v8::internal::compiler::InstructionSequence::representations_”: class“v8::internal::ZoneVector<v8::internal::MachineRepresentation>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1643): note: 参见“v8::internal::ZoneVector<v8::internal::MachineRepresentation>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1645): warning C4251: “v8::internal::compiler::InstructionSequence::deoptimization_entries_”: class“v8::internal::ZoneVector<v8::internal::compiler::DeoptimizationEntry>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1334): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::DeoptimizationEntry>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(302): warning C4251: “v8::internal::CompilationInfo::script_”: class“v8::internal::Handle<v8::internal::Script>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(31): note: 参见“v8::internal::Handle<v8::internal::Script>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(310): warning C4251: “v8::internal::CompilationInfo::shared_info_”: class“v8::internal::Handle<v8::internal::SharedFunctionInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(33): note: 参见“v8::internal::Handle<v8::internal::SharedFunctionInfo>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(312): warning C4251: “v8::internal::CompilationInfo::closure_”: class“v8::internal::Handle<v8::internal::JSFunction>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(116): note: 参见“v8::internal::Handle<v8::internal::JSFunction>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(315): warning C4251: “v8::internal::CompilationInfo::code_”: class“v8::internal::Handle<v8::internal::Code>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(58): note: 参见“v8::internal::Handle<v8::internal::Code>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(319): warning C4251: “v8::internal::CompilationInfo::osr_offset_”: class“v8::internal::BailoutId”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(899): note: 参见“v8::internal::BailoutId”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(324): warning C4251: “v8::internal::CompilationInfo::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(388): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(327): warning C4251: “v8::internal::CompilationInfo::asm_wasm_data_”: class“v8::internal::Handle<v8::internal::FixedArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(753): note: 参见“v8::internal::Handle<v8::internal::FixedArray>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(333): warning C4251: “v8::internal::CompilationInfo::deferred_handles_”: class“std::shared_ptr<v8::internal::DeferredHandles>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(189): note: 参见“std::shared_ptr<v8::internal::DeferredHandles>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(336): warning C4251: “v8::internal::CompilationInfo::dependencies_”: class“v8::internal::CompilationDependencies”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-dependencies.h(17): note: 参见“v8::internal::CompilationDependencies”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(342): warning C4251: “v8::internal::CompilationInfo::inlined_functions_”: class“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(258): note: 参见“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(354): warning C4251: “v8::internal::CompilationInfo::debug_name_”: class“v8::internal::Vector<const char>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(195): note: 参见“v8::internal::Vector<const char>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(358): warning C4251: “v8::internal::CompilationInfo::coverage_info_”: class“v8::internal::Handle<v8::internal::CoverageInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(835): note: 参见“v8::internal::Handle<v8::internal::CoverageInfo>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(316): warning C4251: “v8::internal::compiler::CallDescriptor::target_type_”: class“v8::internal::MachineType”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/machine-type.h(57): note: 参见“v8::internal::MachineType”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(317): warning C4251: “v8::internal::compiler::CallDescriptor::target_loc_”: class“v8::internal::compiler::LinkageLocation”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(33): note: 参见“v8::internal::compiler::LinkageLocation”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(320): warning C4251: “v8::internal::compiler::CallDescriptor::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\code-generator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(326): warning C4251: “v8::internal::compiler::CallDescriptor::flags_”: class“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\code-generator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(195): note: 参见“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”的声明 (编译源文件 compiler\code-generator.cc)
  control-flow-optimizer.cc
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\common-operator.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\common-operator.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\common-operator.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\common-operator.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\control-flow-optimizer.cc)
  node-marker.cc
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-operator.h(155): warning C4244: “初始化”: 从“int64_t”转换到“intptr_t”，可能丢失数据 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\node-marker.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\node-marker.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\node-marker.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\node-marker.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\node-marker.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\node-marker.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(234): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\node-marker.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\node-marker.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\node-marker.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\node-marker.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\node-marker.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\node-marker.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/control-flow-optimizer.h(45): warning C4251: “v8::internal::compiler::ControlFlowOptimizer::queue_”: class“v8::internal::ZoneQueue<v8::internal::compiler::Node *>”需要有 dll 接口由 class“v8::internal::compiler::ControlFlowOptimizer”的客户端使用  (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/control-flow-optimizer.h(45): note: 参见“v8::internal::ZoneQueue<v8::internal::compiler::Node *>”的声明 (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/control-flow-optimizer.h(46): warning C4251: “v8::internal::compiler::ControlFlowOptimizer::queued_”: class“v8::internal::compiler::NodeMarker<bool>”需要有 dll 接口由 class“v8::internal::compiler::ControlFlowOptimizer”的客户端使用  (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/control-flow-optimizer.h(46): note: 参见“v8::internal::compiler::NodeMarker<bool>”的声明 (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\node-marker.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\node-marker.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\node-marker.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(234): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\node-marker.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\control-flow-optimizer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\control-flow-optimizer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\control-flow-optimizer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\control-flow-optimizer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): warning C4251: “v8::internal::compiler::Graph::decorators_”: class“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”需要有 dll 接口由 class“v8::internal::compiler::Graph”的客户端使用  (编译源文件 compiler\node-marker.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”的声明 (编译源文件 compiler\node-marker.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-operator.h(155): warning C4244: “初始化”: 从“int64_t”转换到“intptr_t”，可能丢失数据 (编译源文件 compiler\control-flow-optimizer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): warning C4251: “v8::internal::compiler::Graph::decorators_”: class“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”需要有 dll 接口由 class“v8::internal::compiler::Graph”的客户端使用  (编译源文件 compiler\control-flow-optimizer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”的声明 (编译源文件 compiler\control-flow-optimizer.cc)
  node-properties.cc
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(316): warning C4251: “v8::internal::compiler::CallDescriptor::target_type_”: class“v8::internal::MachineType”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/machine-type.h(57): note: 参见“v8::internal::MachineType”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(317): warning C4251: “v8::internal::compiler::CallDescriptor::target_loc_”: class“v8::internal::compiler::LinkageLocation”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(33): note: 参见“v8::internal::compiler::LinkageLocation”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(320): warning C4251: “v8::internal::compiler::CallDescriptor::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(326): warning C4251: “v8::internal::compiler::CallDescriptor::flags_”: class“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(195): note: 参见“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\common-operator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(107): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\common-operator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\node-properties.cc)
  opcodes.cc
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\node-properties.cc)
  operator-properties.cc
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(234): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\node-properties.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\node-properties.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\node-properties.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\node-properties.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\operator-properties.cc)
  osr.cc
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-operator.h(155): warning C4244: “初始化”: 从“int64_t”转换到“intptr_t”，可能丢失数据 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): warning C4251: “v8::internal::compiler::Graph::decorators_”: class“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”需要有 dll 接口由 class“v8::internal::compiler::Graph”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(78): warning C4251: “v8::internal::compiler::VectorSlotPair::vector_”: class“v8::internal::Handle<v8::internal::FeedbackVector>”需要有 dll 接口由 class“v8::internal::compiler::VectorSlotPair”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(67): note: 参见“v8::internal::Handle<v8::internal::FeedbackVector>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(79): warning C4251: “v8::internal::compiler::VectorSlotPair::slot_”: class“v8::internal::FeedbackSlot”需要有 dll 接口由 class“v8::internal::compiler::VectorSlotPair”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(876): note: 参见“v8::internal::FeedbackSlot”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(78): warning C4251: “v8::internal::compiler::VectorSlotPair::vector_”: class“v8::internal::Handle<v8::internal::FeedbackVector>”需要有 dll 接口由 class“v8::internal::compiler::VectorSlotPair”的客户端使用  (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(67): note: 参见“v8::internal::Handle<v8::internal::FeedbackVector>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(79): warning C4251: “v8::internal::compiler::VectorSlotPair::slot_”: class“v8::internal::FeedbackSlot”需要有 dll 接口由 class“v8::internal::compiler::VectorSlotPair”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(876): note: 参见“v8::internal::FeedbackSlot”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\operator-properties.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\operator-properties.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\operator-properties.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\operator-properties.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<v8::internal::byte>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): note: 参见“v8::internal::ZoneVector<v8::internal::byte>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(46): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(302): warning C4251: “v8::internal::CompilationInfo::script_”: class“v8::internal::Handle<v8::internal::Script>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(31): note: 参见“v8::internal::Handle<v8::internal::Script>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(310): warning C4251: “v8::internal::CompilationInfo::shared_info_”: class“v8::internal::Handle<v8::internal::SharedFunctionInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(33): note: 参见“v8::internal::Handle<v8::internal::SharedFunctionInfo>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(312): warning C4251: “v8::internal::CompilationInfo::closure_”: class“v8::internal::Handle<v8::internal::JSFunction>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(89): note: 参见“v8::internal::Handle<v8::internal::JSFunction>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(315): warning C4251: “v8::internal::CompilationInfo::code_”: class“v8::internal::Handle<v8::internal::Code>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/list.h(211): note: 参见“v8::internal::Handle<v8::internal::Code>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(319): warning C4251: “v8::internal::CompilationInfo::osr_offset_”: class“v8::internal::BailoutId”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(899): note: 参见“v8::internal::BailoutId”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(324): warning C4251: “v8::internal::CompilationInfo::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(103): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(327): warning C4251: “v8::internal::CompilationInfo::asm_wasm_data_”: class“v8::internal::Handle<v8::internal::FixedArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(753): note: 参见“v8::internal::Handle<v8::internal::FixedArray>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(333): warning C4251: “v8::internal::CompilationInfo::deferred_handles_”: class“std::shared_ptr<v8::internal::DeferredHandles>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(189): note: 参见“std::shared_ptr<v8::internal::DeferredHandles>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(336): warning C4251: “v8::internal::CompilationInfo::dependencies_”: class“v8::internal::CompilationDependencies”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-dependencies.h(17): note: 参见“v8::internal::CompilationDependencies”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(342): warning C4251: “v8::internal::CompilationInfo::inlined_functions_”: class“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(258): note: 参见“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(354): warning C4251: “v8::internal::CompilationInfo::debug_name_”: class“v8::internal::Vector<const char>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(195): note: 参见“v8::internal::Vector<const char>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(358): warning C4251: “v8::internal::CompilationInfo::coverage_info_”: class“v8::internal::Handle<v8::internal::CoverageInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(276): note: 参见“v8::internal::Handle<v8::internal::CoverageInfo>”的声明 (编译源文件 compiler\osr.cc)
  value-numbering-reducer.cc
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\osr.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\osr.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\osr.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\osr.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(316): warning C4251: “v8::internal::compiler::CallDescriptor::target_type_”: class“v8::internal::MachineType”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/machine-type.h(57): note: 参见“v8::internal::MachineType”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(317): warning C4251: “v8::internal::compiler::CallDescriptor::target_loc_”: class“v8::internal::compiler::LinkageLocation”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(33): note: 参见“v8::internal::compiler::LinkageLocation”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(320): warning C4251: “v8::internal::compiler::CallDescriptor::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(326): warning C4251: “v8::internal::compiler::CallDescriptor::flags_”: class“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\node-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(195): note: 参见“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”的声明 (编译源文件 compiler\node-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(234): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(178): warning C4251: “v8::internal::compiler::GraphReducer::state_”: class“v8::internal::compiler::NodeMarker<v8::internal::compiler::GraphReducer::State>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(178): note: 参见“v8::internal::compiler::NodeMarker<v8::internal::compiler::GraphReducer::State>”的声明 (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(179): warning C4251: “v8::internal::compiler::GraphReducer::reducers_”: class“v8::internal::ZoneVector<v8::internal::compiler::Reducer *>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(179): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::Reducer *>”的声明 (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(348): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(180): warning C4251: “v8::internal::compiler::GraphReducer::revisit_”: class“v8::internal::ZoneQueue<v8::internal::compiler::Node *>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(180): note: 参见“v8::internal::ZoneQueue<v8::internal::compiler::Node *>”的声明 (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(181): warning C4251: “v8::internal::compiler::GraphReducer::stack_”: class“v8::internal::ZoneStack<v8::internal::compiler::GraphReducer::NodeState>”需要有 dll 接口由 class“v8::internal::compiler::GraphReducer”的客户端使用  (编译源文件 compiler\value-numbering-reducer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph-reducer.h(181): note: 参见“v8::internal::ZoneStack<v8::internal::compiler::GraphReducer::NodeState>”的声明 (编译源文件 compiler\value-numbering-reducer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\osr.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\osr.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(316): warning C4251: “v8::internal::compiler::CallDescriptor::target_type_”: class“v8::internal::MachineType”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/machine-type.h(57): note: 参见“v8::internal::MachineType”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(317): warning C4251: “v8::internal::compiler::CallDescriptor::target_loc_”: class“v8::internal::compiler::LinkageLocation”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(33): note: 参见“v8::internal::compiler::LinkageLocation”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(320): warning C4251: “v8::internal::compiler::CallDescriptor::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\operator-properties.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(326): warning C4251: “v8::internal::compiler::CallDescriptor::flags_”: class“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\operator-properties.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(195): note: 参见“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”的声明 (编译源文件 compiler\operator-properties.cc)
  wasm-compiler.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\wasm-compiler.cc)
  counters.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<v8::internal::byte>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): note: 参见“v8::internal::ZoneVector<v8::internal::byte>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(46): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(302): warning C4251: “v8::internal::CompilationInfo::script_”: class“v8::internal::Handle<v8::internal::Script>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(31): note: 参见“v8::internal::Handle<v8::internal::Script>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(310): warning C4251: “v8::internal::CompilationInfo::shared_info_”: class“v8::internal::Handle<v8::internal::SharedFunctionInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(33): note: 参见“v8::internal::Handle<v8::internal::SharedFunctionInfo>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(312): warning C4251: “v8::internal::CompilationInfo::closure_”: class“v8::internal::Handle<v8::internal::JSFunction>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(89): note: 参见“v8::internal::Handle<v8::internal::JSFunction>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(315): warning C4251: “v8::internal::CompilationInfo::code_”: class“v8::internal::Handle<v8::internal::Code>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/list.h(211): note: 参见“v8::internal::Handle<v8::internal::Code>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(319): warning C4251: “v8::internal::CompilationInfo::osr_offset_”: class“v8::internal::BailoutId”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(899): note: 参见“v8::internal::BailoutId”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(324): warning C4251: “v8::internal::CompilationInfo::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(103): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(327): warning C4251: “v8::internal::CompilationInfo::asm_wasm_data_”: class“v8::internal::Handle<v8::internal::FixedArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(753): note: 参见“v8::internal::Handle<v8::internal::FixedArray>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(333): warning C4251: “v8::internal::CompilationInfo::deferred_handles_”: class“std::shared_ptr<v8::internal::DeferredHandles>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(189): note: 参见“std::shared_ptr<v8::internal::DeferredHandles>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(336): warning C4251: “v8::internal::CompilationInfo::dependencies_”: class“v8::internal::CompilationDependencies”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-dependencies.h(17): note: 参见“v8::internal::CompilationDependencies”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(342): warning C4251: “v8::internal::CompilationInfo::inlined_functions_”: class“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(258): note: 参见“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(354): warning C4251: “v8::internal::CompilationInfo::debug_name_”: class“v8::internal::Vector<const char>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(195): note: 参见“v8::internal::Vector<const char>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(358): warning C4251: “v8::internal::CompilationInfo::coverage_info_”: class“v8::internal::Handle<v8::internal::CoverageInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(276): note: 参见“v8::internal::Handle<v8::internal::CoverageInfo>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(219): warning C4251: “v8::internal::CompilationJob::isolate_thread_id_”: class“v8::internal::ThreadId”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/isolate.h(236): note: 参见“v8::internal::ThreadId”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(220): warning C4251: “v8::internal::CompilationJob::time_taken_to_prepare_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(221): warning C4251: “v8::internal::CompilationJob::time_taken_to_execute_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(222): warning C4251: “v8::internal::CompilationJob::time_taken_to_finalize_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-result.h(62): warning C4251: “v8::internal::wasm::ResultBase::error_msg_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“v8::internal::wasm::ResultBase”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\xstring(4054): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-result.h(148): warning C4251: “v8::internal::wasm::ErrorThrower::error_msg_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“v8::internal::wasm::ErrorThrower”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\xstring(4054): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 counters.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 counters.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 counters.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 counters.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 counters.cc)
  debug-frames.cc
  debug-scopes.cc
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 debug\debug-frames.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 debug\debug-frames.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 counters.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 counters.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 counters.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 counters.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 debug\debug-scopes.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 debug\debug-scopes.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 debug\debug-scopes.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 debug\debug-scopes.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 compiler\wasm-compiler.cc)
counters.cc(400): warning C4244: “参数”: 从“int64_t”转换到“double”，可能丢失数据
counters.cc(401): warning C4244: “参数”: 从“int64_t”转换到“double”，可能丢失数据
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(138): warning C4251: “v8::internal::compiler::Operator::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::Operator”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/types.h(381): warning C4251: “v8::internal::compiler::HeapConstantType::object_”: class“v8::internal::Handle<v8::internal::HeapObject>”需要有 dll 接口由 class“v8::internal::compiler::HeapConstantType”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1787): note: 参见“v8::internal::Handle<v8::internal::HeapObject>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-operator.h(155): warning C4244: “初始化”: 从“int64_t”转换到“intptr_t”，可能丢失数据 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/compiler-source-position-table.h(63): warning C4251: “v8::internal::compiler::SourcePositionTable::current_position_”: class“v8::internal::SourcePosition”需要有 dll 接口由 class“v8::internal::compiler::SourcePositionTable”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assembler.h(60): note: 参见“v8::internal::SourcePosition”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/compiler-source-position-table.h(64): warning C4251: “v8::internal::compiler::SourcePositionTable::table_”: class“v8::internal::compiler::NodeAuxData<v8::internal::SourcePosition,v8::internal::SourcePosition v8::internal::SourcePosition::Unknown(void)>”需要有 dll 接口由 class“v8::internal::compiler::SourcePositionTable”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/compiler-source-position-table.h(64): note: 参见“v8::internal::compiler::NodeAuxData<v8::internal::SourcePosition,v8::internal::SourcePosition v8::internal::SourcePosition::Unknown(void)>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): warning C4251: “v8::internal::compiler::Graph::decorators_”: class“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”需要有 dll 接口由 class“v8::internal::compiler::Graph”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/graph.h(103): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::GraphDecorator *>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(724): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<v8::internal::ZoneAllocator<T>,std::_Vector_val<std::_Simple_types<_Ty>>,false>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::internal::compiler::MoveOperands *,
              _Alloc=v8::internal::ZoneAllocator<v8::internal::compiler::MoveOperands *>
          ]
          and
          [
              T=v8::internal::compiler::MoveOperands *,
              _Ty=v8::internal::compiler::MoveOperands *
          ]
          and
          [
              _Ty=v8::internal::compiler::MoveOperands *,
              _Alloc=v8::internal::ZoneAllocator<v8::internal::compiler::MoveOperands *>
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<v8::internal::ZoneAllocator<T>,std::_Vector_val<std::_Simple_types<_Ty>>,false>”的声明
          with
          [
              T=v8::internal::compiler::MoveOperands *,
              _Ty=v8::internal::compiler::MoveOperands *
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1357): warning C4251: “v8::internal::compiler::PhiInstruction::operands_”: class“v8::internal::ZoneVector<int>”需要有 dll 接口由 class“v8::internal::compiler::PhiInstruction”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/zone-containers.h(183): note: 参见“v8::internal::ZoneVector<int>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1428): warning C4251: “v8::internal::compiler::InstructionBlock::successors_”: class“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1400): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1429): warning C4251: “v8::internal::compiler::InstructionBlock::predecessors_”: class“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1400): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1430): warning C4251: “v8::internal::compiler::InstructionBlock::phis_”: class“v8::internal::ZoneVector<v8::internal::compiler::PhiInstruction *>”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1411): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::PhiInstruction *>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1431): warning C4251: “v8::internal::compiler::InstructionBlock::ao_number_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1432): warning C4251: “v8::internal::compiler::InstructionBlock::rpo_number_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1433): warning C4251: “v8::internal::compiler::InstructionBlock::loop_header_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1434): warning C4251: “v8::internal::compiler::InstructionBlock::loop_end_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1637): warning C4251: “v8::internal::compiler::InstructionSequence::source_positions_”: class“v8::internal::ZoneMap<const v8::internal::compiler::Instruction *,v8::internal::SourcePosition,std::less<K>>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用
          with
          [
              K=const v8::internal::compiler::Instruction *
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1629): note: 参见“v8::internal::ZoneMap<const v8::internal::compiler::Instruction *,v8::internal::SourcePosition,std::less<K>>”的声明
          with
          [
              K=const v8::internal::compiler::Instruction *
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1638): warning C4251: “v8::internal::compiler::InstructionSequence::constants_”: class“std::map<int,v8::internal::compiler::Constant,std::less<int>,v8::internal::ZoneAllocator<std::pair<const int,v8::internal::compiler::Constant>>>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1456): note: 参见“std::map<int,v8::internal::compiler::Constant,std::less<int>,v8::internal::ZoneAllocator<std::pair<const int,v8::internal::compiler::Constant>>>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1639): warning C4251: “v8::internal::compiler::InstructionSequence::immediates_”: class“v8::internal::ZoneVector<v8::internal::compiler::Constant>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1562): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::Constant>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1640): warning C4251: “v8::internal::compiler::InstructionSequence::instructions_”: class“v8::internal::ZoneDeque<v8::internal::compiler::Instruction *>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1460): note: 参见“v8::internal::ZoneDeque<v8::internal::compiler::Instruction *>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1642): warning C4251: “v8::internal::compiler::InstructionSequence::reference_maps_”: class“v8::internal::ZoneDeque<v8::internal::compiler::ReferenceMap *>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1461): note: 参见“v8::internal::ZoneDeque<v8::internal::compiler::ReferenceMap *>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1643): warning C4251: “v8::internal::compiler::InstructionSequence::representations_”: class“v8::internal::ZoneVector<v8::internal::wasm::ValueType>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/function-body-decoder.h(87): note: 参见“v8::internal::ZoneVector<v8::internal::wasm::ValueType>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1645): warning C4251: “v8::internal::compiler::InstructionSequence::deoptimization_entries_”: class“v8::internal::ZoneVector<v8::internal::compiler::DeoptimizationEntry>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1334): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::DeoptimizationEntry>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(676): warning C4251: “v8::internal::compiler::MachineOperatorBuilder::flags_”: class“v8::base::Flags<v8::internal::compiler::MachineOperatorBuilder::Flag,unsigned int>”需要有 dll 接口由 class“v8::internal::compiler::MachineOperatorBuilder”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(165): note: 参见“v8::base::Flags<v8::internal::compiler::MachineOperatorBuilder::Flag,unsigned int>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(677): warning C4251: “v8::internal::compiler::MachineOperatorBuilder::alignment_requirements_”: class“v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements”需要有 dll 接口由 class“v8::internal::compiler::MachineOperatorBuilder”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/machine-operator.h(167): note: 参见“v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction-selector.h(429): warning C4251: “v8::internal::compiler::InstructionSelector::features_”: class“v8::internal::compiler::InstructionSelector::Features”需要有 dll 接口由 class“v8::internal::compiler::InstructionSelector”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction-selector.h(132): note: 参见“v8::internal::compiler::InstructionSelector::Features”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction-selector.h(432): warning C4251: “v8::internal::compiler::InstructionSelector::instructions_”: class“v8::internal::ZoneVector<v8::internal::compiler::Instruction *>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSelector”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction-selector.h(432): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::Instruction *>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction-selector.h(433): warning C4251: “v8::internal::compiler::InstructionSelector::defined_”: class“v8::internal::ZoneVector<bool>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSelector”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/zone-containers.h(182): note: 参见“v8::internal::ZoneVector<bool>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction-selector.h(434): warning C4251: “v8::internal::compiler::InstructionSelector::used_”: class“v8::internal::ZoneVector<bool>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSelector”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/zone-containers.h(182): note: 参见“v8::internal::ZoneVector<bool>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction-selector.h(435): warning C4251: “v8::internal::compiler::InstructionSelector::effect_level_”: class“v8::internal::ZoneVector<int>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSelector”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/zone-containers.h(183): note: 参见“v8::internal::ZoneVector<int>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction-selector.h(436): warning C4251: “v8::internal::compiler::InstructionSelector::virtual_registers_”: class“v8::internal::ZoneVector<int>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSelector”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/zone-containers.h(183): note: 参见“v8::internal::ZoneVector<int>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction-selector.h(437): warning C4251: “v8::internal::compiler::InstructionSelector::virtual_register_rename_”: class“v8::internal::ZoneVector<int>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSelector”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/zone-containers.h(183): note: 参见“v8::internal::ZoneVector<int>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/int64-lowering.h(74): warning C4251: “v8::internal::compiler::Int64Lowering::state_”: class“v8::internal::compiler::NodeMarker<v8::internal::compiler::Int64Lowering::State>”需要有 dll 接口由 class“v8::internal::compiler::Int64Lowering”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/int64-lowering.h(74): note: 参见“v8::internal::compiler::NodeMarker<v8::internal::compiler::Int64Lowering::State>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/int64-lowering.h(75): warning C4251: “v8::internal::compiler::Int64Lowering::stack_”: class“v8::internal::ZoneDeque<v8::internal::compiler::Int64Lowering::NodeState>”需要有 dll 接口由 class“v8::internal::compiler::Int64Lowering”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/int64-lowering.h(75): note: 参见“v8::internal::ZoneDeque<v8::internal::compiler::Int64Lowering::NodeState>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(78): warning C4251: “v8::internal::compiler::VectorSlotPair::vector_”: class“v8::internal::Handle<v8::internal::FeedbackVector>”需要有 dll 接口由 class“v8::internal::compiler::VectorSlotPair”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(164): note: 参见“v8::internal::Handle<v8::internal::FeedbackVector>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-operator.h(79): warning C4251: “v8::internal::compiler::VectorSlotPair::slot_”: class“v8::internal::FeedbackSlot”需要有 dll 接口由 class“v8::internal::compiler::VectorSlotPair”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(876): note: 参见“v8::internal::FeedbackSlot”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/js-graph.h(205): warning C4251: “v8::internal::compiler::JSGraph::cache_”: class“v8::internal::compiler::CommonNodeCache”需要有 dll 接口由 class“v8::internal::compiler::JSGraph”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-node-cache.h(23): note: 参见“v8::internal::compiler::CommonNodeCache”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(316): warning C4251: “v8::internal::compiler::CallDescriptor::target_type_”: class“v8::internal::MachineType”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/machine-type.h(57): note: 参见“v8::internal::MachineType”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(317): warning C4251: “v8::internal::compiler::CallDescriptor::target_loc_”: class“v8::internal::compiler::LinkageLocation”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(33): note: 参见“v8::internal::compiler::LinkageLocation”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(320): warning C4251: “v8::internal::compiler::CallDescriptor::properties_”: class“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/operator.h(60): note: 参见“v8::base::Flags<v8::internal::compiler::Operator::Property,uint8_t>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(326): warning C4251: “v8::internal::compiler::CallDescriptor::flags_”: class“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”需要有 dll 接口由 class“v8::internal::compiler::CallDescriptor”的客户端使用  (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/linkage.h(195): note: 参见“v8::base::Flags<v8::internal::compiler::CallDescriptor::Flag,int>”的声明 (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/zone-stats.h(59): warning C4251: “v8::internal::compiler::ZoneStats::StatsScope::initial_values_”: class“std::map<v8::internal::Zone *,::size_t,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::compiler::ZoneStats::StatsScope”的客户端使用
          with
          [
              _Kty=v8::internal::Zone *,
              _Ty=::size_t
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/zone-stats.h(56): note: 参见“std::map<v8::internal::Zone *,::size_t,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::Zone *,
              _Ty=::size_t
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/zone-stats.h(81): warning C4251: “v8::internal::compiler::ZoneStats::zones_”: class“std::vector<v8::internal::Zone *,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::internal::compiler::ZoneStats”的客户端使用
          with
          [
              _Ty=v8::internal::Zone *
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/zone-stats.h(78): note: 参见“std::vector<v8::internal::Zone *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone *
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/zone-stats.h(82): warning C4251: “v8::internal::compiler::ZoneStats::stats_”: class“std::vector<v8::internal::compiler::ZoneStats::StatsScope *,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::internal::compiler::ZoneStats”的客户端使用
          with
          [
              _Ty=v8::internal::compiler::ZoneStats::StatsScope *
          ] (编译源文件 compiler\wasm-compiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/zone-stats.h(79): note: 参见“std::vector<v8::internal::compiler::ZoneStats::StatsScope *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::compiler::ZoneStats::StatsScope *
          ] (编译源文件 compiler\wasm-compiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 debug\debug-frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 debug\debug-frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(528): warning C4251: “v8::internal::Scope::variables_”: class“v8::internal::VariableMap”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(31): note: 参见“v8::internal::VariableMap”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(531): warning C4251: “v8::internal::Scope::locals_”: class“v8::internal::ThreadedList<v8::internal::Variable>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/variables.h(181): note: 参见“v8::internal::ThreadedList<v8::internal::Variable>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(536): warning C4251: “v8::internal::Scope::decls_”: class“v8::internal::ThreadedList<v8::internal::Declaration>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/ast.h(434): note: 参见“v8::internal::ThreadedList<v8::internal::Declaration>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(539): warning C4251: “v8::internal::Scope::scope_info_”: class“v8::internal::Handle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects/scope-info.h(136): note: 参见“v8::internal::Handle<v8::internal::ScopeInfo>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): warning C4251: “v8::internal::DeclarationScope::params_”: class“v8::internal::ZoneList<v8::internal::Variable *>”需要有 dll 接口由 class“v8::internal::DeclarationScope”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): note: 参见“v8::internal::ZoneList<v8::internal::Variable *>”的声明 (编译源文件 debug\debug-scopes.cc)
  debug.cc
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(261): warning C4251: “v8::internal::ParseInfo::zone_”: class“std::shared_ptr<v8::internal::Zone>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(261): note: 参见“std::shared_ptr<v8::internal::Zone>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(278): warning C4251: “v8::internal::ParseInfo::script_”: class“v8::internal::Handle<v8::internal::Script>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(31): note: 参见“v8::internal::Handle<v8::internal::Script>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(279): warning C4251: “v8::internal::ParseInfo::maybe_outer_scope_info_”: class“v8::internal::MaybeHandle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects/scope-info.h(183): note: 参见“v8::internal::MaybeHandle<v8::internal::ScopeInfo>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(282): warning C4251: “v8::internal::ParseInfo::character_stream_”: class“std::unique_ptr<v8::internal::Utf16CharacterStream,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用
          with
          [
              _Ty=v8::internal::Utf16CharacterStream
          ] (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(98): note: 参见“std::unique_ptr<v8::internal::Utf16CharacterStream,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Utf16CharacterStream
          ] (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(284): warning C4251: “v8::internal::ParseInfo::consumed_preparsed_scope_data_”: class“v8::internal::ConsumedPreParsedScopeData”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/preparsed-scope-data.h(182): note: 参见“v8::internal::ConsumedPreParsedScopeData”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(285): warning C4251: “v8::internal::ParseInfo::ast_value_factory_”: class“std::shared_ptr<v8::internal::AstValueFactory>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(285): note: 参见“std::shared_ptr<v8::internal::AstValueFactory>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(293): warning C4251: “v8::internal::ParseInfo::deferred_handles_”: class“std::shared_ptr<v8::internal::DeferredHandles>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 debug\debug-scopes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(293): note: 参见“std::shared_ptr<v8::internal::DeferredHandles>”的声明 (编译源文件 debug\debug-scopes.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 debug\debug.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 debug\debug.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 debug\debug.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 debug\debug.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 debug\debug.cc)
  diy-fp.cc
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug.cc)
  feedback-vector.cc
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 debug\debug.cc)
  flags.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 feedback-vector.cc)
  frames.cc
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler-dispatcher/optimizing-compile-dispatcher.h(79): warning C4251: “v8::internal::OptimizingCompileDispatcher::input_queue_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::OptimizingCompileDispatcher”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler-dispatcher/optimizing-compile-dispatcher.h(82): warning C4251: “v8::internal::OptimizingCompileDispatcher::output_queue_”: class“std::queue<v8::internal::CompilationJob *,std::deque<_Ty,std::allocator<_Ty>>>”需要有 dll 接口由 class“v8::internal::OptimizingCompileDispatcher”的客户端使用
          with
          [
              _Ty=v8::internal::CompilationJob *
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler-dispatcher/optimizing-compile-dispatcher.h(82): note: 参见“std::queue<v8::internal::CompilationJob *,std::deque<_Ty,std::allocator<_Ty>>>”的声明
          with
          [
              _Ty=v8::internal::CompilationJob *
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler-dispatcher/optimizing-compile-dispatcher.h(85): warning C4251: “v8::internal::OptimizingCompileDispatcher::output_queue_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::OptimizingCompileDispatcher”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler-dispatcher/optimizing-compile-dispatcher.h(92): warning C4251: “v8::internal::OptimizingCompileDispatcher::ref_count_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::OptimizingCompileDispatcher”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler-dispatcher/optimizing-compile-dispatcher.h(93): warning C4251: “v8::internal::OptimizingCompileDispatcher::ref_count_zero_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::OptimizingCompileDispatcher”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(219): warning C4251: “v8::internal::CompilationJob::isolate_thread_id_”: class“v8::internal::ThreadId”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/isolate.h(236): note: 参见“v8::internal::ThreadId”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(220): warning C4251: “v8::internal::CompilationJob::time_taken_to_prepare_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(221): warning C4251: “v8::internal::CompilationJob::time_taken_to_execute_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(222): warning C4251: “v8::internal::CompilationJob::time_taken_to_finalize_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 flags.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 feedback-vector.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 feedback-vector.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 feedback-vector.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(528): warning C4251: “v8::internal::Scope::variables_”: class“v8::internal::VariableMap”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(31): note: 参见“v8::internal::VariableMap”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(531): warning C4251: “v8::internal::Scope::locals_”: class“v8::internal::ThreadedList<v8::internal::Variable>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/variables.h(181): note: 参见“v8::internal::ThreadedList<v8::internal::Variable>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(536): warning C4251: “v8::internal::Scope::decls_”: class“v8::internal::ThreadedList<v8::internal::Declaration>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/ast.h(434): note: 参见“v8::internal::ThreadedList<v8::internal::Declaration>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(539): warning C4251: “v8::internal::Scope::scope_info_”: class“v8::internal::Handle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects/scope-info.h(136): note: 参见“v8::internal::Handle<v8::internal::ScopeInfo>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): warning C4251: “v8::internal::DeclarationScope::params_”: class“v8::internal::ZoneList<v8::internal::Variable *>”需要有 dll 接口由 class“v8::internal::DeclarationScope”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): note: 参见“v8::internal::ZoneList<v8::internal::Variable *>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 flags.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 flags.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 flags.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 flags.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 debug\debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 debug\debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 frames.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 frames.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 frames.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 frames.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 frames.cc)
  gdb-jit.cc
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 feedback-vector.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 feedback-vector.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 gdb-jit.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 gdb-jit.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 gdb-jit.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 gdb-jit.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 frames.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 frames.cc)
  code-stats.cc
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 gdb-jit.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 gdb-jit.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/string-stream.h(129): warning C4838: 从“uint32_t”转换到“v8::internal::StringStream::FmtElm”需要收缩转换 (编译源文件 frames.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/string-stream.h(124): note: 参见对正在编译的函数 模板 实例化“void v8::internal::StringStream::Add<uint32_t,char*,int,int>(v8::internal::Vector<const char>,uint32_t,char *,int,int)”的引用 (编译源文件 frames.cc)
  frames.cc(1698): note: 参见对正在编译的函数 模板 实例化“void v8::internal::StringStream::Add<uint32_t,char*,int,int>(const char *,uint32_t,char *,int,int)”的引用
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 heap\code-stats.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 heap\code-stats.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 heap\code-stats.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 heap\code-stats.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 heap\code-stats.cc)
  embedder-tracing.cc
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 heap\embedder-tracing.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 heap\embedder-tracing.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\embedder-tracing.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\embedder-tracing.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\embedder-tracing.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\embedder-tracing.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/embedder-tracing.h(62): warning C4251: “v8::internal::LocalEmbedderHeapTracer::cached_wrappers_to_trace_”: class“std::vector<std::pair<void *,void *>,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::internal::LocalEmbedderHeapTracer”的客户端使用
          with
          [
              _Ty=std::pair<void *,void *>
          ] (编译源文件 heap\embedder-tracing.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(6678): note: 参见“std::vector<std::pair<void *,void *>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::pair<void *,void *>
          ] (编译源文件 heap\embedder-tracing.cc)
  gc-idle-time-handler.cc
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 heap\code-stats.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\code-stats.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 heap\code-stats.cc)
  incremental-marking-job.cc
  marking.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 heap\gc-idle-time-handler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 heap\gc-idle-time-handler.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 heap\gc-idle-time-handler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 heap\marking.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 heap\marking.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\marking.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\marking.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\marking.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 heap\marking.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 heap\incremental-marking-job.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 heap\incremental-marking-job.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 heap\incremental-marking-job.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(323): warning C4251: “v8::internal::GCTracer::current_”: class“v8::internal::GCTracer::Event”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(90): note: 参见“v8::internal::GCTracer::Event”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(326): warning C4251: “v8::internal::GCTracer::previous_”: class“v8::internal::GCTracer::Event”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(90): note: 参见“v8::internal::GCTracer::Event”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(343): warning C4251: “v8::internal::GCTracer::incremental_marking_scopes_”: struct“v8::internal::GCTracer::IncrementalMarkingInfos”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(38): note: 参见“v8::internal::GCTracer::IncrementalMarkingInfos”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(361): warning C4251: “v8::internal::GCTracer::recorded_minor_gcs_total_”: class“v8::base::RingBuffer<v8::internal::BytesAndDuration>”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(290): note: 参见“v8::base::RingBuffer<v8::internal::BytesAndDuration>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(362): warning C4251: “v8::internal::GCTracer::recorded_minor_gcs_survived_”: class“v8::base::RingBuffer<v8::internal::BytesAndDuration>”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(290): note: 参见“v8::base::RingBuffer<v8::internal::BytesAndDuration>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(363): warning C4251: “v8::internal::GCTracer::recorded_compactions_”: class“v8::base::RingBuffer<v8::internal::BytesAndDuration>”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(290): note: 参见“v8::base::RingBuffer<v8::internal::BytesAndDuration>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(364): warning C4251: “v8::internal::GCTracer::recorded_incremental_mark_compacts_”: class“v8::base::RingBuffer<v8::internal::BytesAndDuration>”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(290): note: 参见“v8::base::RingBuffer<v8::internal::BytesAndDuration>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(365): warning C4251: “v8::internal::GCTracer::recorded_mark_compacts_”: class“v8::base::RingBuffer<v8::internal::BytesAndDuration>”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(290): note: 参见“v8::base::RingBuffer<v8::internal::BytesAndDuration>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(366): warning C4251: “v8::internal::GCTracer::recorded_new_generation_allocations_”: class“v8::base::RingBuffer<v8::internal::BytesAndDuration>”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(290): note: 参见“v8::base::RingBuffer<v8::internal::BytesAndDuration>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(367): warning C4251: “v8::internal::GCTracer::recorded_old_generation_allocations_”: class“v8::base::RingBuffer<v8::internal::BytesAndDuration>”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(290): note: 参见“v8::base::RingBuffer<v8::internal::BytesAndDuration>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(368): warning C4251: “v8::internal::GCTracer::recorded_context_disposal_times_”: class“v8::base::RingBuffer<double>”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(368): note: 参见“v8::base::RingBuffer<double>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(369): warning C4251: “v8::internal::GCTracer::recorded_survival_ratios_”: class“v8::base::RingBuffer<double>”需要有 dll 接口由 class“v8::internal::GCTracer”的客户端使用  (编译源文件 heap\gc-idle-time-handler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/gc-tracer.h(368): note: 参见“v8::base::RingBuffer<double>”的声明 (编译源文件 heap\gc-idle-time-handler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 heap\marking.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 heap\marking.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 heap\marking.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 heap\marking.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 heap\incremental-marking-job.cc)
  icu_util.cc
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 heap\incremental-marking-job.cc)
  bytecode-array-accessor.cc
  bytecode-array-iterator.cc
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 heap\incremental-marking-job.cc)
  bytecode-array-writer.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 heap\incremental-marking-job.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 heap\incremental-marking-job.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(42): warning C4251: “v8::internal::interpreter::JumpTableTargetOffsets::iterator::current_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::interpreter::JumpTableTargetOffsets::iterator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(117): warning C4251: “v8::internal::interpreter::BytecodeArrayAccessor::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeArrayAccessor”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(65): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(42): warning C4251: “v8::internal::interpreter::JumpTableTargetOffsets::iterator::current_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::interpreter::JumpTableTargetOffsets::iterator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(117): warning C4251: “v8::internal::interpreter::BytecodeArrayAccessor::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeArrayAccessor”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(65): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<v8::internal::byte>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): note: 参见“v8::internal::ZoneVector<v8::internal::byte>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(46): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-writer.h(83): warning C4251: “v8::internal::interpreter::BytecodeArrayWriter::bytecodes_”: class“v8::internal::ZoneVector<v8::internal::byte>”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeArrayWriter”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): note: 参见“v8::internal::ZoneVector<v8::internal::byte>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-jump-table.h(74): warning C4251: “v8::internal::interpreter::BytecodeJumpTable::bound_”: class“v8::internal::BitVector”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeJumpTable”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/bit-vector.h(14): note: 参见“v8::internal::BitVector”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-label.h(78): warning C4251: “v8::internal::interpreter::BytecodeLabels::labels_”: class“v8::internal::ZoneLinkedList<v8::internal::interpreter::BytecodeLabel>”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeLabels”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-label.h(78): note: 参见“v8::internal::ZoneLinkedList<v8::internal::interpreter::BytecodeLabel>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-node.h(265): warning C4251: “v8::internal::interpreter::BytecodeNode::source_info_”: class“v8::internal::interpreter::BytecodeSourceInfo”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeNode”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-source-info.h(15): note: 参见“v8::internal::interpreter::BytecodeSourceInfo”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(212): warning C4251: “v8::internal::interpreter::ConstantArrayBuilder::constants_map_”: class“v8::base::TemplateHashMapImpl<intptr_t,v8::internal::interpreter::ConstantArrayBuilder::index_t,v8::base::KeyEqualityMatcher<intptr_t>,v8::internal::ZoneAllocationPolicy>”需要有 dll 接口由 class“v8::internal::interpreter::ConstantArrayBuilder”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(209): note: 参见“v8::base::TemplateHashMapImpl<intptr_t,v8::internal::interpreter::ConstantArrayBuilder::index_t,v8::base::KeyEqualityMatcher<intptr_t>,v8::internal::ZoneAllocationPolicy>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(213): warning C4251: “v8::internal::interpreter::ConstantArrayBuilder::smi_map_”: class“v8::internal::ZoneMap<v8::internal::Smi *,v8::internal::interpreter::ConstantArrayBuilder::index_t,std::less<K>>”需要有 dll 接口由 class“v8::internal::interpreter::ConstantArrayBuilder”的客户端使用
          with
          [
              K=v8::internal::Smi *
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(213): note: 参见“v8::internal::ZoneMap<v8::internal::Smi *,v8::internal::interpreter::ConstantArrayBuilder::index_t,std::less<K>>”的声明
          with
          [
              K=v8::internal::Smi *
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(214): warning C4251: “v8::internal::interpreter::ConstantArrayBuilder::smi_pairs_”: class“v8::internal::ZoneVector<std::pair<v8::internal::Smi *,v8::internal::interpreter::ConstantArrayBuilder::index_t>>”需要有 dll 接口由 class“v8::internal::interpreter::ConstantArrayBuilder”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(214): note: 参见“v8::internal::ZoneVector<std::pair<v8::internal::Smi *,v8::internal::interpreter::ConstantArrayBuilder::index_t>>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-accessor.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 interpreter\bytecode-array-accessor.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-iterator.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 interpreter\bytecode-array-iterator.cc)
  bytecode-flags.cc
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-array-writer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 interpreter\bytecode-array-writer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 interpreter\bytecode-flags.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 interpreter\bytecode-flags.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 interpreter\bytecode-flags.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 interpreter\bytecode-flags.cc)
  bytecode-label.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\bytecode-label.cc)
  bytecode-operands.cc
  interpreter-intrinsics.cc
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-label.h(78): warning C4251: “v8::internal::interpreter::BytecodeLabels::labels_”: class“v8::internal::ZoneLinkedList<v8::internal::interpreter::BytecodeLabel>”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeLabels”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-label.h(78): note: 参见“v8::internal::ZoneLinkedList<v8::internal::interpreter::BytecodeLabel>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 interpreter\bytecode-label.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 interpreter\bytecode-label.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 interpreter\bytecode-label.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 interpreter\interpreter-intrinsics.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 interpreter\interpreter-intrinsics.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\interpreter-intrinsics.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\interpreter-intrinsics.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\interpreter-intrinsics.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 interpreter\interpreter-intrinsics.cc)
  log-utils.cc
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\interpreter-intrinsics.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\interpreter-intrinsics.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 interpreter\interpreter-intrinsics.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 interpreter\interpreter-intrinsics.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-writer.h(83): warning C4251: “v8::internal::interpreter::BytecodeArrayWriter::bytecodes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeArrayWriter”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(212): warning C4251: “v8::internal::interpreter::ConstantArrayBuilder::constants_map_”: class“v8::base::TemplateHashMapImpl<intptr_t,v8::internal::interpreter::ConstantArrayBuilder::index_t,v8::base::KeyEqualityMatcher<intptr_t>,v8::internal::ZoneAllocationPolicy>”需要有 dll 接口由 class“v8::internal::interpreter::ConstantArrayBuilder”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(209): note: 参见“v8::base::TemplateHashMapImpl<intptr_t,v8::internal::interpreter::ConstantArrayBuilder::index_t,v8::base::KeyEqualityMatcher<intptr_t>,v8::internal::ZoneAllocationPolicy>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(213): warning C4251: “v8::internal::interpreter::ConstantArrayBuilder::smi_map_”: class“v8::internal::ZoneMap<v8::internal::Smi *,v8::internal::interpreter::ConstantArrayBuilder::index_t,std::less<K>>”需要有 dll 接口由 class“v8::internal::interpreter::ConstantArrayBuilder”的客户端使用
          with
          [
              K=v8::internal::Smi *
          ] (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(213): note: 参见“v8::internal::ZoneMap<v8::internal::Smi *,v8::internal::interpreter::ConstantArrayBuilder::index_t,std::less<K>>”的声明
          with
          [
              K=v8::internal::Smi *
          ] (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(214): warning C4251: “v8::internal::interpreter::ConstantArrayBuilder::smi_pairs_”: class“v8::internal::ZoneVector<std::pair<v8::internal::Smi *,v8::internal::interpreter::ConstantArrayBuilder::index_t>>”需要有 dll 接口由 class“v8::internal::interpreter::ConstantArrayBuilder”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/constant-array-builder.h(214): note: 参见“v8::internal::ZoneVector<std::pair<v8::internal::Smi *,v8::internal::interpreter::ConstantArrayBuilder::index_t>>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 interpreter\bytecode-flags.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 interpreter\bytecode-flags.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 interpreter\bytecode-flags.cc)
  messages.cc
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/handler-table-builder.h(55): warning C4251: “v8::internal::interpreter::HandlerTableBuilder::entries_”: class“v8::internal::ZoneVector<v8::internal::interpreter::HandlerTableBuilder::Entry>”需要有 dll 接口由 class“v8::internal::interpreter::HandlerTableBuilder”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/handler-table-builder.h(55): note: 参见“v8::internal::ZoneVector<v8::internal::interpreter::HandlerTableBuilder::Entry>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-builder.h(565): warning C4251: “v8::internal::interpreter::BytecodeArrayBuilder::register_allocator_”: class“v8::internal::interpreter::BytecodeRegisterAllocator”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeArrayBuilder”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-register-allocator.h(17): note: 参见“v8::internal::interpreter::BytecodeRegisterAllocator”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-builder.h(568): warning C4251: “v8::internal::interpreter::BytecodeArrayBuilder::latest_source_info_”: class“v8::internal::interpreter::BytecodeSourceInfo”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeArrayBuilder”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-source-info.h(15): note: 参见“v8::internal::interpreter::BytecodeSourceInfo”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-builder.h(569): warning C4251: “v8::internal::interpreter::BytecodeArrayBuilder::deferred_source_info_”: class“v8::internal::interpreter::BytecodeSourceInfo”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeArrayBuilder”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-source-info.h(15): note: 参见“v8::internal::interpreter::BytecodeSourceInfo”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 log-utils.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 log-utils.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 log-utils.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 log-utils.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 interpreter\bytecode-label.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 interpreter\bytecode-label.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 log-utils.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 messages.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 messages.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 messages.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 log-utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 log-utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 messages.cc)
  objects.cc
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 messages.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 messages.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 objects.cc)
  ostreams.cc
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 ostreams.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 ostreams.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 ostreams.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 ostreams.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ostreams.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ostreams.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ostreams.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ostreams.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 objects.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 objects.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 objects.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 objects.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 ostreams.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 ostreams.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 ostreams.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 ostreams.cc)
  expression-scope-reparenter.cc
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 objects.cc)
  parse-info.cc
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 objects.cc)
  cpu-profiler.cc
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(528): warning C4251: “v8::internal::Scope::variables_”: class“v8::internal::VariableMap”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(31): note: 参见“v8::internal::VariableMap”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(531): warning C4251: “v8::internal::Scope::locals_”: class“v8::internal::ThreadedList<v8::internal::Variable>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/variables.h(181): note: 参见“v8::internal::ThreadedList<v8::internal::Variable>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(536): warning C4251: “v8::internal::Scope::decls_”: class“v8::internal::ThreadedList<v8::internal::Declaration>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/ast.h(434): note: 参见“v8::internal::ThreadedList<v8::internal::Declaration>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(539): warning C4251: “v8::internal::Scope::scope_info_”: class“v8::internal::Handle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects/scope-info.h(136): note: 参见“v8::internal::Handle<v8::internal::ScopeInfo>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): warning C4251: “v8::internal::DeclarationScope::params_”: class“v8::internal::ZoneList<v8::internal::Variable *>”需要有 dll 接口由 class“v8::internal::DeclarationScope”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): note: 参见“v8::internal::ZoneList<v8::internal::Variable *>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(261): warning C4251: “v8::internal::ParseInfo::zone_”: class“std::shared_ptr<v8::internal::Zone>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(261): note: 参见“std::shared_ptr<v8::internal::Zone>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(278): warning C4251: “v8::internal::ParseInfo::script_”: class“v8::internal::Handle<v8::internal::Script>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(31): note: 参见“v8::internal::Handle<v8::internal::Script>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(279): warning C4251: “v8::internal::ParseInfo::maybe_outer_scope_info_”: class“v8::internal::MaybeHandle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(209): note: 参见“v8::internal::MaybeHandle<v8::internal::ScopeInfo>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(282): warning C4251: “v8::internal::ParseInfo::character_stream_”: class“std::unique_ptr<v8::internal::Utf16CharacterStream,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用
          with
          [
              _Ty=v8::internal::Utf16CharacterStream
          ] (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(98): note: 参见“std::unique_ptr<v8::internal::Utf16CharacterStream,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Utf16CharacterStream
          ] (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(284): warning C4251: “v8::internal::ParseInfo::consumed_preparsed_scope_data_”: class“v8::internal::ConsumedPreParsedScopeData”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/preparsed-scope-data.h(182): note: 参见“v8::internal::ConsumedPreParsedScopeData”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(285): warning C4251: “v8::internal::ParseInfo::ast_value_factory_”: class“std::shared_ptr<v8::internal::AstValueFactory>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(285): note: 参见“std::shared_ptr<v8::internal::AstValueFactory>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(293): warning C4251: “v8::internal::ParseInfo::deferred_handles_”: class“std::shared_ptr<v8::internal::DeferredHandles>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(293): note: 参见“std::shared_ptr<v8::internal::DeferredHandles>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 parsing\parse-info.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 parsing\parse-info.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 parsing\parse-info.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 parsing\parse-info.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(219): warning C4251: “v8::internal::CompilationJob::isolate_thread_id_”: class“v8::internal::ThreadId”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/isolate.h(236): note: 参见“v8::internal::ThreadId”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(220): warning C4251: “v8::internal::CompilationJob::time_taken_to_prepare_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(221): warning C4251: “v8::internal::CompilationJob::time_taken_to_execute_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(222): warning C4251: “v8::internal::CompilationJob::time_taken_to_finalize_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(528): warning C4251: “v8::internal::Scope::variables_”: class“v8::internal::VariableMap”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(31): note: 参见“v8::internal::VariableMap”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(531): warning C4251: “v8::internal::Scope::locals_”: class“v8::internal::ThreadedList<v8::internal::Variable>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/variables.h(181): note: 参见“v8::internal::ThreadedList<v8::internal::Variable>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(536): warning C4251: “v8::internal::Scope::decls_”: class“v8::internal::ThreadedList<v8::internal::Declaration>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/ast.h(434): note: 参见“v8::internal::ThreadedList<v8::internal::Declaration>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(539): warning C4251: “v8::internal::Scope::scope_info_”: class“v8::internal::Handle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects/scope-info.h(136): note: 参见“v8::internal::Handle<v8::internal::ScopeInfo>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(42): warning C4251: “v8::internal::interpreter::JumpTableTargetOffsets::iterator::current_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::interpreter::JumpTableTargetOffsets::iterator”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(117): warning C4251: “v8::internal::interpreter::BytecodeArrayAccessor::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeArrayAccessor”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(388): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 objects.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 profiler\cpu-profiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 profiler\cpu-profiler.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 profiler\cpu-profiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): warning C4251: “v8::internal::DeclarationScope::params_”: class“v8::internal::ZoneList<v8::internal::Variable *>”需要有 dll 接口由 class“v8::internal::DeclarationScope”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): note: 参见“v8::internal::ZoneList<v8::internal::Variable *>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/eh-frame.h(198): warning C4251: “v8::internal::EhFrameWriter::eh_frame_buffer_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::EhFrameWriter”的客户端使用  (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 objects.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 profiler\cpu-profiler.cc)
objects.cc(16403): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 profiler\cpu-profiler.cc)
objects.cc(16638): warning C4244: “初始化”: 从“double”转换到“uint32_t”，可能丢失数据
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\parse-info.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 parsing\parse-info.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 parsing\expression-scope-reparenter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 parsing\expression-scope-reparenter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\cpu-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 profiler\cpu-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/string-stream.h(129): warning C4838: 从“uint32_t”转换到“v8::internal::StringStream::FmtElm”需要收缩转换 (编译源文件 objects.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/string-stream.h(124): note: 参见对正在编译的函数 模板 实例化“void v8::internal::StringStream::Add<uint32_t>(v8::internal::Vector<const char>,uint32_t)”的引用 (编译源文件 objects.cc)
  objects.cc(2813): note: 参见对正在编译的函数 模板 实例化“void v8::internal::StringStream::Add<uint32_t>(const char *,uint32_t)”的引用
  sampling-heap-profiler.cc
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
  tick-sample.cc
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 profiler\tick-sample.cc)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\tick-sample.cc)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\tick-sample.cc)
d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\tick-sample.cc)
  d:\v8-js\node-v9.3.0\deps\v8\include\v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 profiler\tick-sample.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 profiler\tick-sample.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 profiler\tick-sample.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 profiler\tick-sample.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 profiler\tick-sample.cc)
  jsregexp.cc
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 profiler\tick-sample.cc)
  runtime-profiler.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 regexp\jsregexp.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 regexp\jsregexp.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 regexp\jsregexp.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 regexp\jsregexp.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\sampling-heap-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 profiler\sampling-heap-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 profiler\tick-sample.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 profiler\tick-sample.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 runtime-profiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 runtime-profiler.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\icu-small\source\common\unicode/stringoptions.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/regexp/regexp-macro-assembler.h(112): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 regexp\jsregexp.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 regexp\jsregexp.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 runtime-profiler.cc)
regexp\jsregexp.cc(5996): warning C4244: “参数”: 从“v8::internal::uc16”转换到“char”，可能丢失数据
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime-profiler.cc)
  runtime-classes.cc
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 runtime-profiler.cc)
  runtime-debug.cc
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(219): warning C4251: “v8::internal::CompilationJob::isolate_thread_id_”: class“v8::internal::ThreadId”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/isolate.h(236): note: 参见“v8::internal::ThreadId”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(220): warning C4251: “v8::internal::CompilationJob::time_taken_to_prepare_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(221): warning C4251: “v8::internal::CompilationJob::time_taken_to_execute_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(222): warning C4251: “v8::internal::CompilationJob::time_taken_to_finalize_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 runtime-profiler.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 runtime-profiler.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 runtime\runtime-classes.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-classes.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 runtime\runtime-classes.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-debug.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(219): warning C4251: “v8::internal::CompilationJob::isolate_thread_id_”: class“v8::internal::ThreadId”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/isolate.h(236): note: 参见“v8::internal::ThreadId”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(220): warning C4251: “v8::internal::CompilationJob::time_taken_to_prepare_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(221): warning C4251: “v8::internal::CompilationJob::time_taken_to_execute_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(222): warning C4251: “v8::internal::CompilationJob::time_taken_to_finalize_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-classes.cc)
  runtime-futex.cc
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/accessors.h(97): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-classes.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-classes.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-classes.cc)
  runtime-interpreter.cc
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 runtime\runtime-interpreter.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-interpreter.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 runtime\runtime-interpreter.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(528): warning C4251: “v8::internal::Scope::variables_”: class“v8::internal::VariableMap”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(31): note: 参见“v8::internal::VariableMap”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(531): warning C4251: “v8::internal::Scope::locals_”: class“v8::internal::ThreadedList<v8::internal::Variable>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/variables.h(181): note: 参见“v8::internal::ThreadedList<v8::internal::Variable>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(536): warning C4251: “v8::internal::Scope::decls_”: class“v8::internal::ThreadedList<v8::internal::Declaration>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/ast.h(434): note: 参见“v8::internal::ThreadedList<v8::internal::Declaration>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(539): warning C4251: “v8::internal::Scope::scope_info_”: class“v8::internal::Handle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::Scope”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/debug/debug-evaluate.h(63): note: 参见“v8::internal::Handle<v8::internal::ScopeInfo>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): warning C4251: “v8::internal::DeclarationScope::params_”: class“v8::internal::ZoneList<v8::internal::Variable *>”需要有 dll 接口由 class“v8::internal::DeclarationScope”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ast/scopes.h(954): note: 参见“v8::internal::ZoneList<v8::internal::Variable *>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 runtime\runtime-futex.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-futex.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 runtime\runtime-futex.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 runtime\runtime-debug.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 runtime\runtime-debug.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-interpreter.cc)
  runtime-module.cc
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-futex.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-futex.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(42): warning C4251: “v8::internal::interpreter::JumpTableTargetOffsets::iterator::current_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::interpreter::JumpTableTargetOffsets::iterator”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interpreter/bytecode-array-accessor.h(117): warning C4251: “v8::internal::interpreter::BytecodeArrayAccessor::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::interpreter::BytecodeArrayAccessor”的客户端使用  (编译源文件 runtime\runtime-interpreter.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(388): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 runtime\runtime-interpreter.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 runtime\runtime-module.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 runtime\runtime-module.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-module.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 runtime\runtime-module.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-module.cc)
  runtime-promise.cc
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-promise.cc)
  runtime-strings.cc
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 runtime\runtime-promise.cc)
  safepoint-table.cc
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-module.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-module.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 runtime\runtime-promise.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-promise.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 runtime\runtime-promise.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 runtime\runtime-strings.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 runtime\runtime-strings.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 runtime\runtime-strings.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 runtime\runtime-strings.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 safepoint-table.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 safepoint-table.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 safepoint-table.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-promise.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-promise.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 safepoint-table.cc)
  deserializer.cc
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 runtime\runtime-strings.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/runtime/runtime.h(772): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 runtime\runtime-strings.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/v8memory.h(64): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/v8memory.h(64): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 safepoint-table.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 safepoint-table.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 snapshot\deserializer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 snapshot\deserializer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 snapshot\deserializer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 snapshot\deserializer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 snapshot\deserializer.cc)
  object-deserializer.cc
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\deserializer.cc)
  partial-serializer.cc
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 snapshot\deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\partial-serializer.cc)
  snapshot-source-sink.cc
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 snapshot\partial-serializer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 snapshot\partial-serializer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 snapshot\partial-serializer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
  startup-serializer.cc
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 snapshot\object-deserializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 snapshot\object-deserializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\snapshot-source-sink.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 snapshot\snapshot-source-sink.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\partial-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 snapshot\partial-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 snapshot\startup-serializer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 snapshot\startup-serializer.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 snapshot\startup-serializer.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 snapshot\startup-serializer.cc)
  source-position.cc
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 snapshot\startup-serializer.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 snapshot\startup-serializer.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 snapshot\startup-serializer.cc)
  startup-data-util.cc
  string-case.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 startup-data-util.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 startup-data-util.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 startup-data-util.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 startup-data-util.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 startup-data-util.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 startup-data-util.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 string-case.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 string-case.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 string-case.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 string-case.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 string-case.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 string-case.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 startup-data-util.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 startup-data-util.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 startup-data-util.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 startup-data-util.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 string-case.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 string-case.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 string-case.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 string-case.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<v8::internal::byte>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): note: 参见“v8::internal::ZoneVector<v8::internal::byte>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(46): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(302): warning C4251: “v8::internal::CompilationInfo::script_”: class“v8::internal::Handle<v8::internal::Script>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(31): note: 参见“v8::internal::Handle<v8::internal::Script>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(310): warning C4251: “v8::internal::CompilationInfo::shared_info_”: class“v8::internal::Handle<v8::internal::SharedFunctionInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position.h(105): note: 参见“v8::internal::Handle<v8::internal::SharedFunctionInfo>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(312): warning C4251: “v8::internal::CompilationInfo::closure_”: class“v8::internal::Handle<v8::internal::JSFunction>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(89): note: 参见“v8::internal::Handle<v8::internal::JSFunction>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(315): warning C4251: “v8::internal::CompilationInfo::code_”: class“v8::internal::Handle<v8::internal::Code>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/list.h(211): note: 参见“v8::internal::Handle<v8::internal::Code>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(319): warning C4251: “v8::internal::CompilationInfo::osr_offset_”: class“v8::internal::BailoutId”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(899): note: 参见“v8::internal::BailoutId”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(324): warning C4251: “v8::internal::CompilationInfo::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(103): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(327): warning C4251: “v8::internal::CompilationInfo::asm_wasm_data_”: class“v8::internal::Handle<v8::internal::FixedArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(753): note: 参见“v8::internal::Handle<v8::internal::FixedArray>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(333): warning C4251: “v8::internal::CompilationInfo::deferred_handles_”: class“std::shared_ptr<v8::internal::DeferredHandles>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(189): note: 参见“std::shared_ptr<v8::internal::DeferredHandles>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(336): warning C4251: “v8::internal::CompilationInfo::dependencies_”: class“v8::internal::CompilationDependencies”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-dependencies.h(17): note: 参见“v8::internal::CompilationDependencies”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(342): warning C4251: “v8::internal::CompilationInfo::inlined_functions_”: class“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(258): note: 参见“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(354): warning C4251: “v8::internal::CompilationInfo::debug_name_”: class“v8::internal::Vector<const char>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(195): note: 参见“v8::internal::Vector<const char>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(358): warning C4251: “v8::internal::CompilationInfo::coverage_info_”: class“v8::internal::Handle<v8::internal::CoverageInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(276): note: 参见“v8::internal::Handle<v8::internal::CoverageInfo>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 source-position.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 source-position.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 source-position.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 source-position.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 source-position.cc)
  handler-outside.cc
  type-hints.cc
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 type-hints.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 type-hints.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 type-hints.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 type-hints.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 type-hints.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 type-hints.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 source-position.cc)
  utils.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 utils.cc)
  visitors.cc
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 type-hints.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 type-hints.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 type-hints.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 type-hints.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(52): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 source-position.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 source-position.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 utils.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 utils.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 utils.cc)
  compilation-manager.cc
  wasm-code-specialization.cc
  wasm-js.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 wasm\compilation-manager.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 wasm\wasm-js.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 wasm\wasm-js.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 wasm\wasm-js.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 wasm\wasm-js.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<v8::internal::byte>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): note: 参见“v8::internal::ZoneVector<v8::internal::byte>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(46): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(302): warning C4251: “v8::internal::CompilationInfo::script_”: class“v8::internal::Handle<v8::internal::Script>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(31): note: 参见“v8::internal::Handle<v8::internal::Script>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(310): warning C4251: “v8::internal::CompilationInfo::shared_info_”: class“v8::internal::Handle<v8::internal::SharedFunctionInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(33): note: 参见“v8::internal::Handle<v8::internal::SharedFunctionInfo>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(312): warning C4251: “v8::internal::CompilationInfo::closure_”: class“v8::internal::Handle<v8::internal::JSFunction>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(116): note: 参见“v8::internal::Handle<v8::internal::JSFunction>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(315): warning C4251: “v8::internal::CompilationInfo::code_”: class“v8::internal::Handle<v8::internal::Code>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/list.h(211): note: 参见“v8::internal::Handle<v8::internal::Code>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(319): warning C4251: “v8::internal::CompilationInfo::osr_offset_”: class“v8::internal::BailoutId”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/utils.h(899): note: 参见“v8::internal::BailoutId”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(324): warning C4251: “v8::internal::CompilationInfo::bytecode_array_”: class“v8::internal::Handle<v8::internal::BytecodeArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(103): note: 参见“v8::internal::Handle<v8::internal::BytecodeArray>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(327): warning C4251: “v8::internal::CompilationInfo::asm_wasm_data_”: class“v8::internal::Handle<v8::internal::FixedArray>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(753): note: 参见“v8::internal::Handle<v8::internal::FixedArray>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(333): warning C4251: “v8::internal::CompilationInfo::deferred_handles_”: class“std::shared_ptr<v8::internal::DeferredHandles>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(189): note: 参见“std::shared_ptr<v8::internal::DeferredHandles>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(336): warning C4251: “v8::internal::CompilationInfo::dependencies_”: class“v8::internal::CompilationDependencies”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-dependencies.h(17): note: 参见“v8::internal::CompilationDependencies”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(342): warning C4251: “v8::internal::CompilationInfo::inlined_functions_”: class“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(258): note: 参见“std::vector<v8::internal::CompilationInfo::InlinedFunctionHolder,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::CompilationInfo::InlinedFunctionHolder
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(354): warning C4251: “v8::internal::CompilationInfo::debug_name_”: class“v8::internal::Vector<const char>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(195): note: 参见“v8::internal::Vector<const char>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(358): warning C4251: “v8::internal::CompilationInfo::coverage_info_”: class“v8::internal::Handle<v8::internal::CoverageInfo>”需要有 dll 接口由 class“v8::internal::CompilationInfo”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compilation-info.h(276): note: 参见“v8::internal::Handle<v8::internal::CoverageInfo>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(219): warning C4251: “v8::internal::CompilationJob::isolate_thread_id_”: class“v8::internal::ThreadId”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/isolate.h(236): note: 参见“v8::internal::ThreadId”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(220): warning C4251: “v8::internal::CompilationJob::time_taken_to_prepare_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(221): warning C4251: “v8::internal::CompilationJob::time_taken_to_execute_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler.h(222): warning C4251: “v8::internal::CompilationJob::time_taken_to_finalize_”: class“v8::base::TimeDelta”需要有 dll 接口由 class“v8::internal::CompilationJob”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/futex-emulation.h(28): note: 参见“v8::base::TimeDelta”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-result.h(62): warning C4251: “v8::internal::wasm::ResultBase::error_msg_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“v8::internal::wasm::ResultBase”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\xstring(4054): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-result.h(148): warning C4251: “v8::internal::wasm::ErrorThrower::error_msg_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“v8::internal::wasm::ErrorThrower”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\xstring(4054): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-result.h(62): warning C4251: “v8::internal::wasm::ResultBase::error_msg_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“v8::internal::wasm::ResultBase”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\xstring(4054): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-result.h(148): warning C4251: “v8::internal::wasm::ErrorThrower::error_msg_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“v8::internal::wasm::ErrorThrower”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\xstring(4054): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
  zone-segment.cc
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 zone\zone-segment.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 zone\zone-segment.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 zone\zone-segment.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 zone\zone-segment.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 zone\zone-segment.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 zone\zone-segment.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/platform.h(292): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/mutex.h(37): note: 参见“v8::base::Mutex”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
  deoptimizer-ia32.cc
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\compilation-manager.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 wasm\compilation-manager.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/api-natives.h(45): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/api-natives.h(41): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/api-natives.h(41): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/api-natives.h(28): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/api-natives.h(28): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 wasm\wasm-code-specialization.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 wasm\wasm-code-specialization.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(261): warning C4251: “v8::internal::ParseInfo::zone_”: class“std::shared_ptr<v8::internal::Zone>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(261): note: 参见“std::shared_ptr<v8::internal::Zone>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(278): warning C4251: “v8::internal::ParseInfo::script_”: class“v8::internal::Handle<v8::internal::Script>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/messages.h(31): note: 参见“v8::internal::Handle<v8::internal::Script>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(279): warning C4251: “v8::internal::ParseInfo::maybe_outer_scope_info_”: class“v8::internal::MaybeHandle<v8::internal::ScopeInfo>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects/scope-info.h(183): note: 参见“v8::internal::MaybeHandle<v8::internal::ScopeInfo>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(282): warning C4251: “v8::internal::ParseInfo::character_stream_”: class“std::unique_ptr<v8::internal::Utf16CharacterStream,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用
          with
          [
              _Ty=v8::internal::Utf16CharacterStream
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(98): note: 参见“std::unique_ptr<v8::internal::Utf16CharacterStream,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Utf16CharacterStream
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(284): warning C4251: “v8::internal::ParseInfo::consumed_preparsed_scope_data_”: class“v8::internal::ConsumedPreParsedScopeData”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/preparsed-scope-data.h(182): note: 参见“v8::internal::ConsumedPreParsedScopeData”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(285): warning C4251: “v8::internal::ParseInfo::ast_value_factory_”: class“std::shared_ptr<v8::internal::AstValueFactory>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(285): note: 参见“std::shared_ptr<v8::internal::AstValueFactory>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(293): warning C4251: “v8::internal::ParseInfo::deferred_handles_”: class“std::shared_ptr<v8::internal::DeferredHandles>”需要有 dll 接口由 class“v8::internal::ParseInfo”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/parsing/parse-info.h(293): note: 参见“std::shared_ptr<v8::internal::DeferredHandles>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-result.h(62): warning C4251: “v8::internal::wasm::ResultBase::error_msg_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“v8::internal::wasm::ResultBase”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\xstring(4054): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-result.h(148): warning C4251: “v8::internal::wasm::ErrorThrower::error_msg_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“v8::internal::wasm::ErrorThrower”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\xstring(4054): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): warning C4251: “v8::internal::wasm::SignatureMap::mutex_”: class“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(41): note: 参见“std::unique_ptr<v8::base::Mutex,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::base::Mutex
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): warning C4251: “v8::internal::wasm::SignatureMap::map_”: class“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::wasm::SignatureMap”的客户端使用
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/signature-map.h(42): note: 参见“std::map<v8::internal::wasm::FunctionSig *,uint32_t,v8::internal::wasm::SignatureMap::CompareFunctionSigs,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::wasm::FunctionSig *,
              _Ty=uint32_t
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): warning C4251: “v8::internal::wasm::WasmModule::signature_zone”: class“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(187): note: 参见“std::unique_ptr<v8::internal::Zone,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Zone
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): warning C4251: “v8::internal::wasm::WasmModule::globals”: class“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(195): note: 参见“std::vector<v8::internal::wasm::WasmGlobal,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmGlobal
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(200): warning C4251: “v8::internal::wasm::WasmModule::name”: class“v8::internal::wasm::WireBytesRef”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(74): note: 参见“v8::internal::wasm::WireBytesRef”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): warning C4251: “v8::internal::wasm::WasmModule::signatures”: class“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(202): note: 参见“std::vector<v8::internal::wasm::FunctionSig *,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::FunctionSig *
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): warning C4251: “v8::internal::wasm::WasmModule::functions”: class“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(203): note: 参见“std::vector<v8::internal::wasm::WasmFunction,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmFunction
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): warning C4251: “v8::internal::wasm::WasmModule::data_segments”: class“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(204): note: 参见“std::vector<v8::internal::wasm::WasmDataSegment,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmDataSegment
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): warning C4251: “v8::internal::wasm::WasmModule::function_tables”: class“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(205): note: 参见“std::vector<v8::internal::wasm::WasmIndirectFunctionTable,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmIndirectFunctionTable
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): warning C4251: “v8::internal::wasm::WasmModule::import_table”: class“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(206): note: 参见“std::vector<v8::internal::wasm::WasmImport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmImport
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): warning C4251: “v8::internal::wasm::WasmModule::export_table”: class“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(207): note: 参见“std::vector<v8::internal::wasm::WasmExport,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmExport
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): warning C4251: “v8::internal::wasm::WasmModule::exceptions”: class“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(208): note: 参见“std::vector<v8::internal::wasm::WasmException,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmException
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): warning C4251: “v8::internal::wasm::WasmModule::table_inits”: class“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”需要有 dll 接口由 struct“v8::internal::wasm::WasmModule”的客户端使用
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(209): note: 参见“std::vector<v8::internal::wasm::WasmTableInit,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::wasm::WasmTableInit
          ] (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/wasm/wasm-module.h(280): warning C4251: “v8::internal::wasm::ModuleWireBytes::module_bytes_”: class“v8::internal::Vector<const uint8_t>”需要有 dll 接口由 struct“v8::internal::wasm::ModuleWireBytes”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/vector.h(199): note: 参见“v8::internal::Vector<const uint8_t>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 wasm\wasm-js.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 wasm\wasm-js.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 wasm\wasm-js.cc)
wasm\wasm-js.cc(650): warning C4244: “初始化”: 从“double”转换到“int64_t”，可能丢失数据
wasm\wasm-js.cc(759): warning C4244: “初始化”: 从“double”转换到“uint32_t”，可能丢失数据
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
  interface-descriptors-ia32.cc
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 ia32\deoptimizer-ia32.cc)
  instruction-scheduler-ia32.cc
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
  handler-compiler-ia32.cc
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): warning C4251: “v8::WasmModuleObjectBuilderStreaming::promise_”: class“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4214): note: 参见“v8::Persistent<v8::Promise,v8::CopyablePersistentTraits<v8::Promise>>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): warning C4251: “v8::WasmModuleObjectBuilderStreaming::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilderStreaming”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4242): warning C4251: “v8::WasmModuleObjectBuilder::received_buffers_”: class“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”需要有 dll 接口由 class“v8::WasmModuleObjectBuilder”的客户端使用
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8.h(4218): note: 参见“std::vector<v8::WasmModuleObjectBuilderStreaming::Buffer,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=v8::WasmModuleObjectBuilderStreaming::Buffer
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(77): warning C4251: “v8::internal::AccountingAllocator::unused_segments_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): warning C4251: “v8::internal::AccountingAllocator::memory_pressure_level_”: class“v8::base::AtomicValue<v8::MemoryPressureLevel>”需要有 dll 接口由 class“v8::internal::AccountingAllocator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/accounting-allocator.h(83): note: 参见“v8::base::AtomicValue<v8::MemoryPressureLevel>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(224): warning C4251: “v8::internal::StackGuard::thread_local_”: class“v8::internal::StackGuard::ThreadLocal”需要有 dll 接口由 class“v8::internal::StackGuard”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/execution.h(175): note: 参见“v8::internal::StackGuard::ThreadLocal”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptFrame,
              _Alloc=std::allocator<v8::CpuProfileDeoptFrame>
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(31): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptFrame,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptFrame
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(659): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo
          ]
          and
          [
              _Ty=v8::CpuProfileDeoptInfo,
              _Alloc=std::allocator<v8::CpuProfileDeoptInfo>
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<std::allocator<_Ty>,std::_Vector_val<std::_Simple_types<_Ty>>,true>”的声明
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\include/v8-profiler.h(45): note: 参见对正在编译的 类 模板 实例化 "std::vector<v8::CpuProfileDeoptInfo,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=v8::CpuProfileDeoptInfo
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/common-operator.h(155): warning C4244: “初始化”: 从“int64_t”转换到“intptr_t”，可能丢失数据 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(55): warning C4251: “v8::internal::SourcePositionTableBuilder::bytes_”: class“v8::internal::ZoneVector<unsigned char>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/feedback-vector.h(410): note: 参见“v8::internal::ZoneVector<unsigned char>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): warning C4251: “v8::internal::SourcePositionTableBuilder::raw_entries_”: class“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(57): note: 参见“v8::internal::ZoneVector<v8::internal::PositionTableEntry>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(59): warning C4251: “v8::internal::SourcePositionTableBuilder::previous_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableBuilder”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(109): warning C4251: “v8::internal::SourcePositionTableIterator::table_”: class“v8::internal::Handle<v8::internal::ByteArray>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/factory.h(374): note: 参见“v8::internal::Handle<v8::internal::ByteArray>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(111): warning C4251: “v8::internal::SourcePositionTableIterator::current_”: struct“v8::internal::PositionTableEntry”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(25): note: 参见“v8::internal::PositionTableEntry”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/source-position-table.h(112): warning C4251: “v8::internal::SourcePositionTableIterator::no_gc”: class“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”需要有 dll 接口由 class“v8::internal::SourcePositionTableIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/assert-scope.h(111): note: 参见“v8::internal::PerThreadAssertScopeDebugOnly<v8::internal::HEAP_ALLOCATION_ASSERT,false>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(43): warning C4251: “v8::internal::OFStream::buf_”: class“v8::internal::OFStreamBase”需要有 dll 接口由 class“v8::internal::OFStream”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/ostreams.h(22): note: 参见“v8::internal::OFStreamBase”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_”: class“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(70): note: 参见“std::unordered_map<v8::internal::CancelableTaskManager::Id,v8::internal::Cancelable *,std::hash<_Kty>,std::equal_to<unsigned __int64>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=v8::internal::CancelableTaskManager::Id,
              _Ty=v8::internal::Cancelable *
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(74): warning C4251: “v8::internal::CancelableTaskManager::cancelable_tasks_barrier_”: class“v8::base::ConditionVariable”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/base/platform/condition-variable.h(32): note: 参见“v8::base::ConditionVariable”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(75): warning C4251: “v8::internal::CancelableTaskManager::mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::CancelableTaskManager”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): warning C4251: “v8::internal::Cancelable::status_”: class“v8::base::AtomicValue<v8::internal::Cancelable::Status>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(124): note: 参见“v8::base::AtomicValue<v8::internal::Cancelable::Status>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/cancelable-task.h(130): warning C4251: “v8::internal::Cancelable::cancel_counter_”: class“v8::base::AtomicNumber<intptr_t>”需要有 dll 接口由 class“v8::internal::Cancelable”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2204): note: 参见“v8::base::AtomicNumber<intptr_t>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 ia32\interface-descriptors-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1436): warning C4251: “v8::internal::MemoryAllocator::size_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1438): warning C4251: “v8::internal::MemoryAllocator::size_executable_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): warning C4251: “v8::internal::MemoryAllocator::lowest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1446): warning C4251: “v8::internal::MemoryAllocator::highest_ever_allocated_”: class“v8::base::AtomicValue<void *>”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1445): note: 参见“v8::base::AtomicValue<void *>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1448): warning C4251: “v8::internal::MemoryAllocator::last_chunk_”: class“v8::base::VirtualMemory”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(65): note: 参见“v8::base::VirtualMemory”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1449): warning C4251: “v8::internal::MemoryAllocator::unmapper_”: class“v8::internal::MemoryAllocator::Unmapper”需要有 dll 接口由 class“v8::internal::MemoryAllocator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1157): note: 参见“v8::internal::MemoryAllocator::Unmapper”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1549): warning C4251: “v8::internal::HeapObjectIterator::page_range_”: class“v8::internal::PageRange”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1503): note: 参见“v8::internal::PageRange”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1550): warning C4251: “v8::internal::HeapObjectIterator::current_page_”: class“v8::internal::PageIteratorImpl<v8::internal::Page>”需要有 dll 接口由 class“v8::internal::HeapObjectIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1500): note: 参见“v8::internal::PageIteratorImpl<v8::internal::Page>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1896): warning C4251: “v8::internal::FreeList::wasted_bytes_”: class“v8::base::AtomicNumber<::size_t>”需要有 dll 接口由 class“v8::internal::FreeList”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/heap.h(2230): note: 参见“v8::base::AtomicNumber<::size_t>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2237): warning C4251: “v8::internal::PagedSpace::accounting_stats_”: class“v8::internal::AllocationStats”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1616): note: 参见“v8::internal::AllocationStats”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2240): warning C4251: “v8::internal::PagedSpace::anchor_”: class“v8::internal::Page”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(725): note: 参见“v8::internal::Page”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2246): warning C4251: “v8::internal::PagedSpace::allocation_info_”: class“v8::internal::AllocationInfo”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(1560): note: 参见“v8::internal::AllocationInfo”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/spaces.h(2249): warning C4251: “v8::internal::PagedSpace::space_mutex_”: class“v8::base::Mutex”需要有 dll 接口由 class“v8::internal::PagedSpace”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/globals.h(63): note: 参见“v8::base::Mutex”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(376): warning C4251: “v8::internal::IncrementalMarking::incremental_marking_job_”: class“v8::internal::IncrementalMarkingJob”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking-job.h(19): note: 参见“v8::internal::IncrementalMarkingJob”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(380): warning C4251: “v8::internal::IncrementalMarking::new_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(381): warning C4251: “v8::internal::IncrementalMarking::old_generation_observer_”: class“v8::internal::IncrementalMarking::Observer”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(294): note: 参见“v8::internal::IncrementalMarking::Observer”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(383): warning C4251: “v8::internal::IncrementalMarking::marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(384): warning C4251: “v8::internal::IncrementalMarking::atomic_marking_state_”: class“v8::internal::MajorAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(437): note: 参见“v8::internal::MajorAtomicMarkingState”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/heap/incremental-marking.h(385): warning C4251: “v8::internal::IncrementalMarking::non_atomic_marking_state_”: class“v8::internal::MajorNonAtomicMarkingState”需要有 dll 接口由 class“v8::internal::IncrementalMarking”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/heap/mark-compact.h(461): note: 参见“v8::internal::MajorNonAtomicMarkingState”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/api.h(370): warning C4251: “v8::internal::DeferredHandles::blocks_”: class“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”需要有 dll 接口由 class“v8::internal::DeferredHandles”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/global-handles.h(314): note: 参见“v8::internal::List<v8::internal::Object **,v8::internal::FreeStoreAllocationPolicy>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(381): warning C4251: “v8::internal::LookupIterator::property_details_”: class“v8::internal::PropertyDetails”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/property-details.h(231): note: 参见“v8::internal::PropertyDetails”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(383): warning C4251: “v8::internal::LookupIterator::name_”: class“v8::internal::Handle<v8::internal::Name>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::Name>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(384): warning C4251: “v8::internal::LookupIterator::transition_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(385): warning C4251: “v8::internal::LookupIterator::receiver_”: class“v8::internal::Handle<v8::internal::Object>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/builtins/builtins.h(108): note: 参见“v8::internal::Handle<v8::internal::Object>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(386): warning C4251: “v8::internal::LookupIterator::holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/lookup.h(387): warning C4251: “v8::internal::LookupIterator::initial_holder_”: class“v8::internal::Handle<v8::internal::JSReceiver>”需要有 dll 接口由 class“v8::internal::LookupIterator”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/objects.h(1301): note: 参见“v8::internal::Handle<v8::internal::JSReceiver>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): warning C4251: “v8::internal::CallInterfaceDescriptorData::register_params_”: class“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(148): note: 参见“std::unique_ptr<v8::internal::Register [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::Register []
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): warning C4251: “v8::internal::CallInterfaceDescriptorData::machine_types_”: class“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”需要有 dll 接口由 class“v8::internal::CallInterfaceDescriptorData”的客户端使用
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/interface-descriptors.h(149): note: 参见“std::unique_ptr<v8::internal::MachineType [],std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=v8::internal::MachineType []
          ] (编译源文件 ic\ia32\handler-compiler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(724): warning C4251: “std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Mypair”: class“std::_Compressed_pair<v8::internal::ZoneAllocator<T>,std::_Vector_val<std::_Simple_types<_Ty>>,false>”需要有 dll 接口由 class“std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>”的客户端使用
          with
          [
              _Ty=v8::internal::compiler::MoveOperands *,
              _Alloc=v8::internal::ZoneAllocator<v8::internal::compiler::MoveOperands *>
          ]
          and
          [
              T=v8::internal::compiler::MoveOperands *,
              _Ty=v8::internal::compiler::MoveOperands *
          ]
          and
          [
              _Ty=v8::internal::compiler::MoveOperands *,
              _Alloc=v8::internal::ZoneAllocator<v8::internal::compiler::MoveOperands *>
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\vs17\VC\Tools\MSVC\14.12.25827\include\vector(638): note: 参见“std::_Compressed_pair<v8::internal::ZoneAllocator<T>,std::_Vector_val<std::_Simple_types<_Ty>>,false>”的声明
          with
          [
              T=v8::internal::compiler::MoveOperands *,
              _Ty=v8::internal::compiler::MoveOperands *
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1357): warning C4251: “v8::internal::compiler::PhiInstruction::operands_”: class“v8::internal::ZoneVector<int>”需要有 dll 接口由 class“v8::internal::compiler::PhiInstruction”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/zone/zone-containers.h(183): note: 参见“v8::internal::ZoneVector<int>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1428): warning C4251: “v8::internal::compiler::InstructionBlock::successors_”: class“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1400): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1429): warning C4251: “v8::internal::compiler::InstructionBlock::predecessors_”: class“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1400): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::RpoNumber>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1430): warning C4251: “v8::internal::compiler::InstructionBlock::phis_”: class“v8::internal::ZoneVector<v8::internal::compiler::PhiInstruction *>”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1411): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::PhiInstruction *>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1431): warning C4251: “v8::internal::compiler::InstructionBlock::ao_number_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1432): warning C4251: “v8::internal::compiler::InstructionBlock::rpo_number_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1433): warning C4251: “v8::internal::compiler::InstructionBlock::loop_header_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1434): warning C4251: “v8::internal::compiler::InstructionBlock::loop_end_”: class“v8::internal::compiler::RpoNumber”需要有 dll 接口由 class“v8::internal::compiler::InstructionBlock”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(988): note: 参见“v8::internal::compiler::RpoNumber”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1637): warning C4251: “v8::internal::compiler::InstructionSequence::source_positions_”: class“v8::internal::ZoneMap<const v8::internal::compiler::Instruction *,v8::internal::SourcePosition,std::less<K>>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用
          with
          [
              K=const v8::internal::compiler::Instruction *
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1629): note: 参见“v8::internal::ZoneMap<const v8::internal::compiler::Instruction *,v8::internal::SourcePosition,std::less<K>>”的声明
          with
          [
              K=const v8::internal::compiler::Instruction *
          ] (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1638): warning C4251: “v8::internal::compiler::InstructionSequence::constants_”: class“std::map<int,v8::internal::compiler::Constant,std::less<int>,v8::internal::ZoneAllocator<std::pair<const int,v8::internal::compiler::Constant>>>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1456): note: 参见“std::map<int,v8::internal::compiler::Constant,std::less<int>,v8::internal::ZoneAllocator<std::pair<const int,v8::internal::compiler::Constant>>>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1639): warning C4251: “v8::internal::compiler::InstructionSequence::immediates_”: class“v8::internal::ZoneVector<v8::internal::compiler::Constant>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1562): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::Constant>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1640): warning C4251: “v8::internal::compiler::InstructionSequence::instructions_”: class“v8::internal::ZoneDeque<v8::internal::compiler::Instruction *>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1460): note: 参见“v8::internal::ZoneDeque<v8::internal::compiler::Instruction *>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1642): warning C4251: “v8::internal::compiler::InstructionSequence::reference_maps_”: class“v8::internal::ZoneDeque<v8::internal::compiler::ReferenceMap *>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1461): note: 参见“v8::internal::ZoneDeque<v8::internal::compiler::ReferenceMap *>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1643): warning C4251: “v8::internal::compiler::InstructionSequence::representations_”: class“v8::internal::ZoneVector<v8::internal::MachineRepresentation>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1643): note: 参见“v8::internal::ZoneVector<v8::internal::MachineRepresentation>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1645): warning C4251: “v8::internal::compiler::InstructionSequence::deoptimization_entries_”: class“v8::internal::ZoneVector<v8::internal::compiler::DeoptimizationEntry>”需要有 dll 接口由 class“v8::internal::compiler::InstructionSequence”的客户端使用  (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
  D:\v8-js\node-v9.3.0\deps\v8\src/compiler/instruction.h(1334): note: 参见“v8::internal::ZoneVector<v8::internal::compiler::DeoptimizationEntry>”的声明 (编译源文件 compiler\ia32\instruction-scheduler-ia32.cc)
gdb-jit.obj : warning LNK4221: 此对象文件未定义任何之前未定义的公共符号，因此任何耗用此库的链接操作都不会使用此文件
  v8_base_1.vcxproj -> D:\v8-js\node-v9.3.0\deps\v8\src\Debug\lib\v8_base_1.lib
